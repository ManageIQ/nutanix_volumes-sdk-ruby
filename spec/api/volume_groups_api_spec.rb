=begin
#Nutanix Volumes APIs

#Configure volumes.

The version of the OpenAPI document: 4.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NutanixVolumes::VolumeGroupsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VolumeGroupsApi' do
  before do
    # run before each test
    @api_instance = NutanixVolumes::VolumeGroupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VolumeGroupsApi' do
    it 'should create an instance of VolumeGroupsApi' do
      expect(@api_instance).to be_instance_of(NutanixVolumes::VolumeGroupsApi)
    end
  end

  # unit tests for associate_category
  # Associate category to a Volume Group
  # Associates a category to a Volume Group identified by {extId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param volumes_v40_config_category_entity_references The list of categories to be associated/disassociated with the Volume Group. This is a mandatory field.
  # @param [Hash] opts the optional parameters
  # @return [AssociateCategory202Response]
  describe 'associate_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attach_iscsi_client
  # Attach an iSCSI client to the given Volume Group
  # Attaches iSCSI initiator to a Volume Group identified by {extId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_iscsi_client A model that represents an iSCSI client that can be associated with a Volume Group as an external attachment.
  # @param [Hash] opts the optional parameters
  # @return [AttachIscsiClient202Response]
  describe 'attach_iscsi_client test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attach_vm
  # Attach an AHV VM to the given Volume Group
  # Attaches VM to a Volume Group identified by {extId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_vm_attachment A model that represents a VM reference that can be associated with a Volume Group as an AHV hypervisor attachment.
  # @param [Hash] opts the optional parameters
  # @return [AttachVm202Response]
  describe 'attach_vm test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_volume_disk
  # Creates a new Volume Disk
  # Creates a new Volume Disk.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_volume_disk A model that represents a Volume Disk associated with a Volume Group, supported by a backing file on DSF.
  # @param [Hash] opts the optional parameters
  # @return [CreateVolumeDisk202Response]
  describe 'create_volume_disk test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_volume_group
  # Creates a new Volume Group
  # Creates a new Volume Group.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_volume_group A model that represents a Volume Group resource.
  # @param [Hash] opts the optional parameters
  # @return [CreateVolumeGroup202Response]
  describe 'create_volume_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_volume_disk_by_id
  # Delete a Volume Disk
  # Deletes a Volume Disk identified by {extId} in the Volume Group identified by {volumeGroupExtId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param ext_id The external identifier of a Volume Disk.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param [Hash] opts the optional parameters
  # @return [DeleteVolumeDiskById202Response]
  describe 'delete_volume_disk_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_volume_group_by_id
  # Delete the Volume Group
  # Delete the Volume Group identified by {extId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param [Hash] opts the optional parameters
  # @return [DeleteVolumeGroupById202Response]
  describe 'delete_volume_group_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for detach_iscsi_client
  # Detach an iSCSi client from the given Volume Group
  # Detaches iSCSI initiator identified by {extId} from a Volume Group identified by {volumeGroupExtId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_iscsi_client_attachment A model that represents an iSCSI client that can be associated with a Volume Group as an external attachment. It contains the minimal properties required for the attachment.
  # @param [Hash] opts the optional parameters
  # @return [DetachIscsiClient202Response]
  describe 'detach_iscsi_client test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for detach_vm
  # Detach an AHV VM from the given Volume Group
  # Detaches VM identified by {extId} from a Volume Group identified by {volumeGroupExtId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_vm_attachment A model that represents a VM reference that can be associated with a Volume Group as an AHV hypervisor attachment.
  # @param [Hash] opts the optional parameters
  # @return [DetachVm202Response]
  describe 'detach_vm test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for disassociate_category
  # Disassociate category from a Volume Group
  # Disassociates a category from a Volume Group identified by {extId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param volumes_v40_config_category_entity_references The list of categories to be associated/disassociated with the Volume Group. This is a mandatory field.
  # @param [Hash] opts the optional parameters
  # @return [DisassociateCategory202Response]
  describe 'disassociate_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_volume_disk_by_id
  # Get the details of a Volume Disk
  # Query the Volume Disk identified by {extId} in the Volume Group identified by {volumeGroupExtId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param ext_id The external identifier of a Volume Disk.
  # @param [Hash] opts the optional parameters
  # @return [GetVolumeDiskById200Response]
  describe 'get_volume_disk_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_volume_disk_stats
  # Get statistics for a Volume Disk
  # Query the Volume Disk stats identified by {diskExtId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param ext_id The external identifier of a Volume Disk.
  # @param start_time The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html 
  # @param end_time The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :sampling_interval The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30. 
  # @option opts [CommonV10StatsDownSamplingOperator] :stat_type 
  # @option opts [String] :select A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. - controllerAvgIOLatencyUsecs - controllerAvgReadIOLatencyUsecs - controllerAvgWriteIOLatencyUsecs - controllerIOBandwidthKBps - controllerNumIOPS - controllerNumReadIOPS - controllerNumWriteIOPS - controllerReadIOBandwidthKBps - controllerUserBytes - controllerWriteIOBandwidthKBps 
  # @return [GetVolumeDiskStats200Response]
  describe 'get_volume_disk_stats test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_volume_group_by_id
  # Get a Volume Group
  # Query the Volume Group identified by {extId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param [Hash] opts the optional parameters
  # @return [GetVolumeGroupById200Response]
  describe 'get_volume_group_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_volume_group_metadata_by_id
  # Fetch metadata information associated with a Volume Group.
  # Query for metadata information which is associated with the Volume Group identified by {extId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param [Hash] opts the optional parameters
  # @return [GetVolumeGroupMetadataById200Response]
  describe 'get_volume_group_metadata_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_volume_group_stats
  # Get statistics for a Volume Group
  # Query the Volume Group stats identified by {extId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param start_time The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html 
  # @param end_time The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :sampling_interval The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30. 
  # @option opts [CommonV10StatsDownSamplingOperator] :stat_type 
  # @option opts [String] :select A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. - controllerAvgIOLatencyUsecs - controllerAvgReadIOLatencyUsecs - controllerAvgWriteIOLatencyUsecs - controllerIOBandwidthKBps - controllerNumIOPS - controllerNumReadIOPS - controllerNumWriteIOPS - controllerReadIOBandwidthKBps - controllerUserBytes - controllerWriteIOBandwidthKBps 
  # @return [GetVolumeGroupStats200Response]
  describe 'get_volume_group_stats test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_category_associations_by_volume_group_id
  # List all the category details that are associated with the Volume Group
  # Query the category details that are associated with the Volume Group identified by {volumeGroupExtId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @return [ListCategoryAssociationsByVolumeGroupId200Response]
  describe 'list_category_associations_by_volume_group_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_external_iscsi_attachments_by_volume_group_id
  # List all the iSCSI attachments associated with the given Volume Group
  # Query the list of external iSCSI attachments for a Volume Group identified by {extId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - clusterReference - extId 
  # @option opts [String] :orderby A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, &#39;$orderby&#x3D;templateName desc&#39; would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: - clusterReference - extId 
  # @option opts [String] :expand A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported. - iscsiClient 
  # @option opts [String] :select A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. - clusterReference - extId 
  # @return [ListExternalIscsiAttachmentsByVolumeGroupId200Response]
  describe 'list_external_iscsi_attachments_by_volume_group_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_vm_attachments_by_volume_group_id
  # List all the VM attachments for a Volume Group
  # Query the list of VM attachments for a Volume Group identified by {extId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - extId 
  # @option opts [String] :orderby A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, &#39;$orderby&#x3D;templateName desc&#39; would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: - extId 
  # @return [ListVmAttachmentsByVolumeGroupId200Response]
  describe 'list_vm_attachments_by_volume_group_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_volume_disks_by_volume_group_id
  # List all the Volume Disks attached to the Volume Group
  # Query the list of disks corresponding to a Volume Group identified by {volumeGroupExtId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - storageContainerId 
  # @option opts [String] :orderby A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, &#39;$orderby&#x3D;templateName desc&#39; would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: - diskSizeBytes 
  # @option opts [String] :select A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. - extId - storageContainerId 
  # @return [ListVolumeDisksByVolumeGroupId200Response]
  describe 'list_volume_disks_by_volume_group_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_volume_groups
  # List all the Volume Groups
  # Query the list of Volume Groups.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - clusterReference - extId - name 
  # @option opts [String] :orderby A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, &#39;$orderby&#x3D;templateName desc&#39; would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: - clusterReference - extId - name 
  # @option opts [String] :expand A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported. - cluster - metadata 
  # @option opts [String] :select A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. - clusterReference - extId - name 
  # @return [ListVolumeGroups200Response]
  describe 'list_volume_groups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for revert_volume_group
  # Revert a Volume Group
  # Reverts a Volume Group identified by Volume Group external identifier. This API performs an in-place restore from a specified Volume Group recovery point.
  # @param ext_id The external identifier of a Volume Group.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_revert_spec Specify the Volume Group recovery point ID to which the Volume Group would be reverted.
  # @param [Hash] opts the optional parameters
  # @return [RevertVolumeGroup202Response]
  describe 'revert_volume_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_volume_disk_by_id
  # Update a specified Volume Disk
  # Updates a specific Volume Disk identified by {extId}.
  # @param volume_group_ext_id The external identifier of a Volume Group.
  # @param ext_id The external identifier of a Volume Disk.
  # @param if_match The If-Match request header makes the request conditional. When not provided, the server will respond with  an HTTP-428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow the successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP-412 (Precondition Failed) response will be returned.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_volume_disk A model that represents a Volume Disk associated with a Volume Group, supported by a backing file on DSF.
  # @param [Hash] opts the optional parameters
  # @return [UpdateVolumeDiskById202Response]
  describe 'update_volume_disk_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_volume_group_by_id
  # Update details of a specified Volume Group
  # Updates details of a specific Volume Group identified by {extId}.
  # @param ext_id The external identifier of a Volume Group.
  # @param if_match The If-Match request header makes the request conditional. When not provided, the server will respond with  an HTTP-428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow the successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP-412 (Precondition Failed) response will be returned.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param volumes_v40_config_volume_group A model that represents a Volume Group resource.
  # @param [Hash] opts the optional parameters
  # @return [UpdateVolumeGroupById202Response]
  describe 'update_volume_group_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
