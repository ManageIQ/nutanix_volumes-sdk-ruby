openapi: 3.0.1
info:
  title: Nutanix Volumes APIs
  description: Configure volumes.
  version: "4.0"
  x-logo:
    altText: Volumes Logo
    url: https://developers.nutanix.com/api/v1/namespaces/storage/images/storage-logo-img.svg
  x-namespace-backward-compatibility:
  - redirect: storage
    to: volumes
  x-repo-name: volumes
servers:
- url: "https://{pc-ip}:9440/api"
security:
- basicAuthScheme: []
- apiKeyAuthScheme: []
tags:
- name: IscsiClients
  description: |
    Represents the configuration of the external iSCSI client connecting to a Volume Group.  You can fetch and list iSCSI clients using these APIs.
  x-displayName: Iscsi Clients
- name: VolumeGroups
  description: |
    Represents an entity that exposes block storage devices. Once created a Volume Group  may be either directly connected to a guest operating system or exposed to AHV hosts in a NCI  cluster. Storage & DR policies can be applied on a Volume Group by associating categories.
  x-displayName: Volume Groups
paths:
  /volumes/v4.0/config/iscsi-clients/{extId}:
    get:
      tags:
      - IscsiClients
      summary: Fetch an iSCSI client details
      description: "Fetches the iSCSI client details identified by {extId}."
      operationId: getIscsiClientById
      parameters:
      - name: extId
        in: path
        description: The external identifier of an iSCSI client.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: be0e4630-23da-4b9c-a76b-f24fd64b46b6
      responses:
        "200":
          description: Details of the queried iSCSI client.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.config.IscsiClient'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View External ISCSI Client
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.IscsiClientsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.GetIscsiClientApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    IscsiClientsApi iscsiClientsApi = new IscsiClientsApi(apiClient);\n\
          \n        \n        String extId = \"64AD2D2A-a21d-DBF6-AbD3-F5B77eb7bCBd\"\
          ;\n\n        try {\n            GetIscsiClientApiResponse getIscsiClientApiResponse\
          \ = iscsiClientsApi.getIscsiClientById(extId);\n            System.out.println(getIscsiClientApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, IscsiClientsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let iscsiClientsApi = new IscsiClientsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let extId = \"f4EfDfab-Ffb1-bcED-1967-CceACb60f5eb\"\
          ;\n\n\n\n\n\n    iscsiClientsApi.getIscsiClientById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   iscsi_clients_api = ntnx_volumes_py_client.IscsiClientsApi(api_client=client)\n\
          \    \n    ext_id = \"7EfF6Bbe-c9f2-71bE-5ddC-aaf4eDC1Edf0\"\n\n\n    try:\n\
          \        api_response = iscsi_clients_api.get_iscsi_client_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    IscsiClientsApiInstance\
          \ *api.IscsiClientsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    IscsiClientsApiInstance = api.NewIscsiClientsApi(ApiClientInstance)\n\
          \n    \n    extId := \"6FaaBbeB-EeD3-CDCF-DAf1-ecA69eebfbF6\"\n\n\n    response,\
          \ error := IscsiClientsApiInstance.GetIscsiClientById(&extId)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.IscsiClient)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/iscsi-clients/eF5ECeDA-6BCc-cf01-CD8c-FfB0B3CCEE1c" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/iscsi-clients/AB6beA09-3dfD-6BD0-07Dd-3EdfDBE6CBff"
    put:
      tags:
      - IscsiClients
      summary: Update an iSCSI client
      description: "Modifies the details of an existing iSCSI client configuration\
        \ identified by {extId}."
      operationId: updateIscsiClientById
      parameters:
      - name: extId
        in: path
        description: The external identifier of an iSCSI client.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 6ac8e14f-f0ca-432e-9c59-5099b634d992
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: fcdfa6ab-d3ec-496f-a303-6ee6127c2a49
      requestBody:
        description: A model that represents an iSCSI client that can be associated
          with a Volume Group as an external attachment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.IscsiClient'
        required: true
      responses:
        "202":
          description: iSCSI client after the update operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Update External ISCSI Client
        roleList:
        - Prism Admin
        - Super Admin
        - Self-Service Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 15
        timeUnit: seconds
      - type: small
        count: 15
        timeUnit: seconds
      - type: large
        count: 15
        timeUnit: seconds
      - type: xlarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.IscsiClientsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.IscsiClient;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.GetIscsiClientApiResponse;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.UpdateIscsiClientApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    IscsiClientsApi iscsiClientsApi = new IscsiClientsApi(apiClient);\n\
          \n        IscsiClient iscsiClient = new IscsiClient();\n\n        // IscsiClient\
          \ object initializations here...\n        \n        String extId = \"dAdAEafB-D7DF-eB98-E7BC-9e5a8834F9AA\"\
          ;\n\n        // perform GET call\n        GetIscsiClientApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = iscsiClientsApi.getIscsiClientById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateIscsiClientApiResponse updateIscsiClientApiResponse\
          \ = iscsiClientsApi.updateIscsiClientById(extId, iscsiClient, opts);\n \
          \           System.out.println(updateIscsiClientApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, IscsiClientsApi, IscsiClient, GetIscsiClientApiResponse\
          \ } from \"@nutanix-api/volumes-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let iscsiClientsApi = new IscsiClientsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let iscsiClient = new IscsiClient();\n\n    // IscsiClient\
          \ object initializations here...\n\n    \n    let extId = \"cef8E7af-CE6C-81b0-259A-7BC04AD44A3b\"\
          ;\n\n\n    // Perform Get call\n    iscsiClientsApi.getIscsiClientById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        iscsiClientsApi.updateIscsiClientById(extId,\
          \ iscsiClient, {\"If-Match\" : etagValue}).then(({data, response}) => {\n\
          \            console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   iscsi_clients_api = ntnx_volumes_py_client.IscsiClientsApi(api_client=client)\n\
          \    iscsiClient = ntnx_volumes_py_client.IscsiClient()\n\n    # IscsiClient\
          \ object initializations here...\n    \n    ext_id = \"C5ECCccC-DdbF-eCbf-8d9D-dB5e0Acaa51f\"\
          \n\n    try:\n        api_response = iscsi_clients_api.get_iscsi_client_by_id(extId=ext_id)\n\
          \    except ntnx_volumes_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_volumes_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = iscsi_clients_api.update_iscsi_client_by_id(extId=ext_id,\
          \ body=iscsiClient, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_volumes_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    IscsiClientsApiInstance\
          \ *api.IscsiClientsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    IscsiClientsApiInstance = api.NewIscsiClientsApi(ApiClientInstance)\n\
          \n    iscsiClient := import1.NewIscsiClient()\n\n    // IscsiClient object\
          \ initializations here...\n\n    \n    extId := \"9ebDCbBd-8D8B-DEAe-E4eF-CeED08B3ae07\"\
          \n\n    getResponse, err := IscsiClientsApiInstance.GetIscsiClientById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := IscsiClientsApiInstance.UpdateIscsiClientById(&extId,\
          \ iscsiClient, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/iscsi-clients/9b5cBFC0-eC8e-aBE4-f9b4-3CD4089FcbDa" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"iscsiInitiatorName":"string","iscsiInitiatorNetworkId":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"clientSecret":"string","enabledAuthentications":"$UNKNOWN","attachedTargets":[{"numVirtualTargets":0,"iscsiTargetName":"string","$objectType":"volumes.v4.config.TargetParam"}],"numVirtualTargets":0,"clusterReference":"string","attachmentSite":"$UNKNOWN","$objectType":"volumes.v4.config.IscsiClient"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"iscsiInitiatorName":"string","iscsiInitiatorNetworkId":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"clientSecret":"string","enabledAuthentications":"$UNKNOWN","attachedTargets":[{"numVirtualTargets":0,"iscsiTargetName":"string","$objectType":"volumes.v4.config.TargetParam"}],"numVirtualTargets":0,"clusterReference":"string","attachmentSite":"$UNKNOWN","$objectType":"volumes.v4.config.IscsiClient"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/iscsi-clients/dEc4fD6b-Eef5-B0D5-07F8-26e8aca28baB"
  /volumes/v4.0/config/iscsi-clients:
    get:
      tags:
      - IscsiClients
      summary: List all the iSCSI clients
      description: Fetches the list of iSCSI clients.
      operationId: listIscsiClients
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - clusterReference
          - extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - clusterReference
          - extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $expand
        in: query
        description: |
          A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported.
          - cluster
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - clusterReference
          - extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Paginated list of iSCSI clients.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/volumes.v4.0.config.IscsiClient'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View External ISCSI Client
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.IscsiClientsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.ListIscsiClientsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    IscsiClientsApi iscsiClientsApi = new IscsiClientsApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListIscsiClientsApiResponse listIscsiClientsApiResponse\
          \ = iscsiClientsApi.listIscsiClients(page, limit, null, null, null, null);\n\
          \            System.out.println(listIscsiClientsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, IscsiClientsApi } from "@nutanix-api/volumes-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let iscsiClientsApi = new IscsiClientsApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$expand"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              iscsiClientsApi.listIscsiClients(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   iscsi_clients_api = ntnx_volumes_py_client.IscsiClientsApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = iscsi_clients_api.list_iscsi_clients(_page=page, _limit=limit)\n   \
          \     print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    IscsiClientsApiInstance\
          \ *api.IscsiClientsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    IscsiClientsApiInstance = api.NewIscsiClientsApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := IscsiClientsApiInstance.ListIscsiClients(&page_, &limit_, nil, nil,\
          \ nil, nil)\n    if error != nil {\n        fmt.Println(error)\n       \
          \ return\n    }\n    data, _ := response.GetData().([]import1.IscsiClient)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/iscsi-clients?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$expand=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/iscsi-clients?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$expand=string_sample_data&$page=0&$select=string_sample_data"
  /volumes/v4.0/config/volume-groups/{extId}:
    get:
      tags:
      - VolumeGroups
      summary: Get a Volume Group
      description: "Query the Volume Group identified by {extId}."
      operationId: getVolumeGroupById
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d09aeec9-5bb7-4bfd-9717-a051178f6e7c
      responses:
        "200":
          description: Details of the queried Volume Group.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.config.VolumeGroup'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group Details
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.GetVolumeGroupApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String extId = \"dacfde3F-fCCa-e1D5-ecfb-AffBc15A8ce0\"\
          ;\n\n        try {\n            GetVolumeGroupApiResponse getVolumeGroupApiResponse\
          \ = volumeGroupsApi.getVolumeGroupById(extId);\n            System.out.println(getVolumeGroupApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let extId = \"dEebedEC-F7f3-DCEA-dedd-7Ca10c8ffDD0\"\
          ;\n\n\n\n\n\n    volumeGroupsApi.getVolumeGroupById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    ext_id = \"89AFabEA-1A4F-f421-5AFc-25FDaDCF2F4f\"\n\n\n    try:\n\
          \        api_response = volume_groups_api.get_volume_group_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    extId := \"4BBcbAAd-CaBB-e81a-04d5-4D0cE1Ba76cB\"\n\n\n    response,\
          \ error := VolumeGroupsApiInstance.GetVolumeGroupById(&extId)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.VolumeGroup)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/ceCCAD92-0ab3-748A-5ef8-EeEDA8ae5e1c" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/efA12d6C-182f-CCE7-B0ED-F8c8Cbb6cC31"
    put:
      tags:
      - VolumeGroups
      summary: Update details of a specified Volume Group
      description: "Updates details of a specific Volume Group identified by {extId}."
      operationId: updateVolumeGroupById
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 2eb3971e-7d53-4f3d-b046-8cc9c0e72845
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 1dd2f8cf-772a-41ac-b3b9-fa41f7316a75
      requestBody:
        description: A model that represents a Volume Group resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.VolumeGroup'
        required: true
      responses:
        "202":
          description: Returns the task ID corresponding to the Volume Group update
            operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Update Volume Group Details
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 15
        timeUnit: seconds
      - type: small
        count: 15
        timeUnit: seconds
      - type: large
        count: 15
        timeUnit: seconds
      - type: xlarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.VolumeGroup;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.GetVolumeGroupApiResponse;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.UpdateVolumeGroupApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        VolumeGroup volumeGroup = new VolumeGroup();\n\n        // VolumeGroup\
          \ object initializations here...\n        \n        String extId = \"009Bcf8C-Bf54-26Db-99eC-FdbA3cdFba54\"\
          ;\n\n        // perform GET call\n        GetVolumeGroupApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = volumeGroupsApi.getVolumeGroupById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateVolumeGroupApiResponse updateVolumeGroupApiResponse\
          \ = volumeGroupsApi.updateVolumeGroupById(extId, volumeGroup, opts);\n \
          \           System.out.println(updateVolumeGroupApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, VolumeGroup, GetVolumeGroupApiResponse\
          \ } from \"@nutanix-api/volumes-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let volumeGroup = new VolumeGroup();\n\n    // VolumeGroup\
          \ object initializations here...\n\n    \n    let extId = \"be9cd43B-Bb68-afad-0c1d-DCF2CBcAAd8B\"\
          ;\n\n\n    // Perform Get call\n    volumeGroupsApi.getVolumeGroupById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        volumeGroupsApi.updateVolumeGroupById(extId,\
          \ volumeGroup, {\"If-Match\" : etagValue}).then(({data, response}) => {\n\
          \            console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    volumeGroup = ntnx_volumes_py_client.VolumeGroup()\n\n    # VolumeGroup\
          \ object initializations here...\n    \n    ext_id = \"aA7eF8ce-DDE6-9DBD-dCfd-afFc6f74e9Bd\"\
          \n\n    try:\n        api_response = volume_groups_api.get_volume_group_by_id(extId=ext_id)\n\
          \    except ntnx_volumes_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_volumes_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = volume_groups_api.update_volume_group_by_id(extId=ext_id,\
          \ body=volumeGroup, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_volumes_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    volumeGroup := import1.NewVolumeGroup()\n\n    // VolumeGroup object\
          \ initializations here...\n\n    \n    extId := \"AE4A9973-Efc4-b2Df-bDd0-78DFdCcDA5ac\"\
          \n\n    getResponse, err := VolumeGroupsApiInstance.GetVolumeGroupById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VolumeGroupsApiInstance.UpdateVolumeGroupById(&extId,\
          \ volumeGroup, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/F18cFE4e-edc4-a08A-6daf-323eDAfcc0dc" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"string","description":"string","shouldLoadBalanceVmAttachments":false,"sharingStatus":"$UNKNOWN","targetPrefix":"string","targetName":"string","enabledAuthentications":"$UNKNOWN","iscsiFeatures":{"targetSecret":"string","enabledAuthentications":"$UNKNOWN","$objectType":"volumes.v4.config.IscsiFeatures"},"createdBy":"string","clusterReference":"string","storageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.StorageFeatures"},"usageType":"$UNKNOWN","attachmentType":"$UNKNOWN","protocol":"$UNKNOWN","isHidden":false,"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"index":0,"diskSizeBytes":0,"storageContainerId":"string","description":"string","diskDataSourceReference":{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"},"diskStorageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.DiskStorageFeatures"},"$objectType":"volumes.v4.config.VolumeDisk"}],"$objectType":"volumes.v4.config.VolumeGroup"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"string","description":"string","shouldLoadBalanceVmAttachments":false,"sharingStatus":"$UNKNOWN","targetPrefix":"string","targetName":"string","enabledAuthentications":"$UNKNOWN","iscsiFeatures":{"targetSecret":"string","enabledAuthentications":"$UNKNOWN","$objectType":"volumes.v4.config.IscsiFeatures"},"createdBy":"string","clusterReference":"string","storageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.StorageFeatures"},"usageType":"$UNKNOWN","attachmentType":"$UNKNOWN","protocol":"$UNKNOWN","isHidden":false,"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"index":0,"diskSizeBytes":0,"storageContainerId":"string","description":"string","diskDataSourceReference":{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"},"diskStorageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.DiskStorageFeatures"},"$objectType":"volumes.v4.config.VolumeDisk"}],"$objectType":"volumes.v4.config.VolumeGroup"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/fdf63aEf-bcdB-77bf-F380-A6BC0AfF49ba"
    delete:
      tags:
      - VolumeGroups
      summary: Delete the Volume Group
      description: "Delete the Volume Group identified by {extId}."
      operationId: deleteVolumeGroupById
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ccf79021-64c1-49aa-8abb-3bf328a0556e
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 0ff16953-91de-4cf4-9e9e-7a7f3ef6cacb
      responses:
        "202":
          description: Task Id corresponding to the Volume Group delete operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Delete Volume Group
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.DeleteVolumeGroupApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String extId = \"f64a7BaA-FdCE-EEaA-75ec-CFF55acEcc89\"\
          ;\n\n        try {\n            DeleteVolumeGroupApiResponse deleteVolumeGroupApiResponse\
          \ = volumeGroupsApi.deleteVolumeGroupById(extId);\n            System.out.println(deleteVolumeGroupApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let extId = \"D27eaca8-C7Bc-CF5f-4Cde-8D135fDF53CA\"\
          ;\n\n\n\n\n\n    volumeGroupsApi.deleteVolumeGroupById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    ext_id = \"7ab2fAF0-eCC3-E4f3-e5Af-E1aC48BAdaBc\"\n\n\n    try:\n\
          \        api_response = volume_groups_api.delete_volume_group_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    extId := \"EefbFbD4-4BD7-ccBD-3a58-7A0aBbaEDcac\"\n\n\n    response,\
          \ error := VolumeGroupsApiInstance.DeleteVolumeGroupById(&extId)\n    if\
          \ error != nil {\n        fmt.Println(error)\n        return\n    }\n  \
          \  data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/bB6afCDD-C8AD-85EB-90F1-8edBe0dDeBAf" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/90ea2A0E-CCcE-dd9B-7Db8-f8dE30ebbEcb"
  /volumes/v4.0/config/volume-groups:
    get:
      tags:
      - VolumeGroups
      summary: List all the Volume Groups
      description: Query the list of Volume Groups.
      operationId: listVolumeGroups
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - clusterReference
          - extId
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - clusterReference
          - extId
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $expand
        in: query
        description: |
          A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported.
          - cluster
          - metadata
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - clusterReference
          - extId
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Paginated list of Volume Groups.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/volumes.v4.0.config.VolumeGroup'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/volume-groups
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/volume-groups
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/volume-groups
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group Details
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.ListVolumeGroupsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVolumeGroupsApiResponse listVolumeGroupsApiResponse\
          \ = volumeGroupsApi.listVolumeGroups(page, limit, null, null, null, null);\n\
          \            System.out.println(listVolumeGroupsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, VolumeGroupsApi } from "@nutanix-api/volumes-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$expand"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              volumeGroupsApi.listVolumeGroups(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = volume_groups_api.list_volume_groups(_page=page, _limit=limit)\n   \
          \     print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VolumeGroupsApiInstance.ListVolumeGroups(&page_, &limit_, nil, nil,\
          \ nil, nil)\n    if error != nil {\n        fmt.Println(error)\n       \
          \ return\n    }\n    data, _ := response.GetData().([]import1.VolumeGroup)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$expand=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$expand=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - VolumeGroups
      summary: Creates a new Volume Group
      description: Creates a new Volume Group.
      operationId: createVolumeGroup
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 19b737b6-1fa1-4e19-9016-361ce80999a5
      requestBody:
        description: A model that represents a Volume Group resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.VolumeGroup'
        required: true
      responses:
        "202":
          description: Task Id corresponding to the Volume Group create operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/volume-groups
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/volume-groups
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /volumes/v4.0/config/volume-groups
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Create Volume Group
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vol.java.client.ApiClient;
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;
          import com.nutanix.dp1.vol.volumes.v4.config.VolumeGroup;
          import com.nutanix.dp1.vol.volumes.v4.config.CreateVolumeGroupApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);

                  VolumeGroup volumeGroup = new VolumeGroup();

                  // VolumeGroup object initializations here...

                  try {
                      CreateVolumeGroupApiResponse createVolumeGroupApiResponse = volumeGroupsApi.createVolumeGroup(volumeGroup);
                      System.out.println(createVolumeGroupApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, VolumeGroupsApi, VolumeGroup } from "@nutanix-api/volumes-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);

          function sample() {
              let volumeGroup = new VolumeGroup();

              // VolumeGroup object initializations here...






              volumeGroupsApi.createVolumeGroup(volumeGroup).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_volumes_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_volumes_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_volumes_py_client.ApiClient(configuration=config)
              volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)
              volumeGroup = ntnx_volumes_py_client.VolumeGroup()

              # VolumeGroup object initializations here...


              try:
                  api_response = volume_groups_api.create_volume_group(body=volumeGroup)
                  print(api_response)
              except ntnx_volumes_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config"
              import2 "github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              VolumeGroupsApiInstance *api.VolumeGroupsApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)

              volumeGroup := import1.NewVolumeGroup()

              // VolumeGroup object initializations here...



              response, error := VolumeGroupsApiInstance.CreateVolumeGroup(volumeGroup)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"string","description":"string","shouldLoadBalanceVmAttachments":false,"sharingStatus":"$UNKNOWN","targetPrefix":"string","targetName":"string","enabledAuthentications":"$UNKNOWN","iscsiFeatures":{"targetSecret":"string","enabledAuthentications":"$UNKNOWN","$objectType":"volumes.v4.config.IscsiFeatures"},"createdBy":"string","clusterReference":"string","storageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.StorageFeatures"},"usageType":"$UNKNOWN","attachmentType":"$UNKNOWN","protocol":"$UNKNOWN","isHidden":false,"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"index":0,"diskSizeBytes":0,"storageContainerId":"string","description":"string","diskDataSourceReference":{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"},"diskStorageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.DiskStorageFeatures"},"$objectType":"volumes.v4.config.VolumeDisk"}],"$objectType":"volumes.v4.config.VolumeGroup"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"string","description":"string","shouldLoadBalanceVmAttachments":false,"sharingStatus":"$UNKNOWN","targetPrefix":"string","targetName":"string","enabledAuthentications":"$UNKNOWN","iscsiFeatures":{"targetSecret":"string","enabledAuthentications":"$UNKNOWN","$objectType":"volumes.v4.config.IscsiFeatures"},"createdBy":"string","clusterReference":"string","storageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.StorageFeatures"},"usageType":"$UNKNOWN","attachmentType":"$UNKNOWN","protocol":"$UNKNOWN","isHidden":false,"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"index":0,"diskSizeBytes":0,"storageContainerId":"string","description":"string","diskDataSourceReference":{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"},"diskStorageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.DiskStorageFeatures"},"$objectType":"volumes.v4.config.VolumeDisk"}],"$objectType":"volumes.v4.config.VolumeGroup"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups"
  /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks:
    get:
      tags:
      - VolumeGroups
      summary: List all the Volume Disks attached to the Volume Group
      description: "Query the list of disks corresponding to a Volume Group identified\
        \ by {volumeGroupExtId}."
      operationId: listVolumeDisksByVolumeGroupId
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 07c2da68-bb67-4535-9b2a-81504f6bb2e3
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - storageContainerId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - diskSizeBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - storageContainerId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "Paginated list of disks corresponding to a Volume Group identified\
            \ by {volumeGroupExtId}."
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/volumes.v4.0.config.VolumeDisk'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group Disks
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.ListVolumeDisksApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String volumeGroupExtId = \"BEeCdEaF-2Dae-e4fe-0faE-ED2FebEfa8Eb\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVolumeDisksApiResponse listVolumeDisksApiResponse\
          \ = volumeGroupsApi.listVolumeDisksByVolumeGroupId(volumeGroupExtId, page,\
          \ limit, null, null, null);\n            System.out.println(listVolumeDisksApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let volumeGroupExtId = \"7F62dD10-bdf4-BBBB-CbeB-4B2BefF47bbc\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n    opts[\"$select\"\
          ] = \"string_sample_data\";\n\n\n\n\n    volumeGroupsApi.listVolumeDisksByVolumeGroupId(volumeGroupExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    volume_group_ext_id = \"3b50EEbF-C3ef-6d80-a4ff-05BABc8dCbAB\"\
          \n    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = volume_groups_api.list_volume_disks_by_volume_group_id(volumeGroupExtId=volume_group_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    volumeGroupExtId := \"a63ED1A5-078f-6CBb-B4D2-ADa3fD8F6cc1\"\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VolumeGroupsApiInstance.ListVolumeDisksByVolumeGroupId(&volumeGroupExtId,\
          \ &page_, &limit_, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.VolumeDisk)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/3b9AEFAb-B8b8-0C4b-abaC-DeDd3fbcfadE/disks?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/5DAc2aED-8bAB-bBC0-FFdC-d7Cfff0e2B6c/disks?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - VolumeGroups
      summary: Creates a new Volume Disk
      description: Creates a new Volume Disk.
      operationId: createVolumeDisk
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: cf7de8b9-88ed-477d-a602-c34ab7174c01
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: f417325e-35f5-4e77-a7a9-c00f5eb3a2d6
      requestBody:
        description: "A model that represents a Volume Disk associated with a Volume\
          \ Group, supported by a backing file on DSF."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.VolumeDisk'
        required: true
      responses:
        "202":
          description: Task Id corresponding to the Volume Disk create operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Create Volume Group Disk
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.VolumeDisk;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.CreateVolumeDiskApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        VolumeDisk volumeDisk = new VolumeDisk();\n\n        // VolumeDisk\
          \ object initializations here...\n        \n        String volumeGroupExtId\
          \ = \"B26f0Fcb-4D3e-AEeD-eeB0-C5CCCE4e6618\";\n\n        try {\n       \
          \     CreateVolumeDiskApiResponse createVolumeDiskApiResponse = volumeGroupsApi.createVolumeDisk(volumeGroupExtId,\
          \ volumeDisk);\n            System.out.println(createVolumeDiskApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, VolumeDisk } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let volumeDisk = new VolumeDisk();\n\n    // VolumeDisk\
          \ object initializations here...\n\n    \n    let volumeGroupExtId = \"\
          A2Cd2Cdd-24EE-41Ef-Bb1A-13aE82760d07\";\n\n\n\n\n\n    volumeGroupsApi.createVolumeDisk(volumeGroupExtId,\
          \ volumeDisk).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    volumeDisk = ntnx_volumes_py_client.VolumeDisk()\n\n    # VolumeDisk\
          \ object initializations here...\n    \n    volume_group_ext_id = \"dccbfbaE-2EAF-F3Cf-a0Bb-ae198d4DFA27\"\
          \n\n\n    try:\n        api_response = volume_groups_api.create_volume_disk(volumeGroupExtId=volume_group_ext_id,\
          \ body=volumeDisk)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    volumeDisk := import1.NewVolumeDisk()\n\n    // VolumeDisk object\
          \ initializations here...\n\n    \n    volumeGroupExtId := \"AcBcba9f-f5Fa-Ea7D-AdC3-466d5adbEfdC\"\
          \n\n\n    response, error := VolumeGroupsApiInstance.CreateVolumeDisk(&volumeGroupExtId,\
          \ volumeDisk)\n    if error != nil {\n        fmt.Println(error)\n     \
          \   return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/EbfB8c19-bCFC-3aaA-dDFC-5e0A487aAfeB/disks" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"index":0,"diskSizeBytes":0,"storageContainerId":"string","description":"string","diskDataSourceReference":{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"},"diskStorageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.DiskStorageFeatures"},"$objectType":"volumes.v4.config.VolumeDisk"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"index":0,"diskSizeBytes":0,"storageContainerId":"string","description":"string","diskDataSourceReference":{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"},"diskStorageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.DiskStorageFeatures"},"$objectType":"volumes.v4.config.VolumeDisk"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/becEd4bc-BeaF-ef7c-3cCd-EEEFBDaD1a9b/disks"
  /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}:
    get:
      tags:
      - VolumeGroups
      summary: Get the details of a Volume Disk
      description: "Query the Volume Disk identified by {extId} in the Volume Group\
        \ identified by {volumeGroupExtId}."
      operationId: getVolumeDiskById
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 3770be9d-06be-4e25-b85d-3457d9b0ceb1
      - name: extId
        in: path
        description: The external identifier of a Volume Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1d92110d-26b5-46c0-8c93-20b8171373e0
      responses:
        "200":
          description: Details of the queried Volume Disk.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.config.VolumeDisk'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group Disks
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.GetVolumeDiskApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String volumeGroupExtId = \"4ce23c6a-9Aab-bC3A-C13A-DbCa15FeA0dD\"\
          ;\n        \n        String extId = \"b544b1fc-1e7E-80ca-5104-eA0b2c2aF1be\"\
          ;\n\n        try {\n            GetVolumeDiskApiResponse getVolumeDiskApiResponse\
          \ = volumeGroupsApi.getVolumeDiskById(volumeGroupExtId, extId);\n      \
          \      System.out.println(getVolumeDiskApiResponse.toString());\n\n    \
          \    } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let volumeGroupExtId = \"B2Eb14ef-3fff-cE2A-daBA-987CaBCAbD46\"\
          ;\n    \n    let extId = \"fe54Cafa-2dc2-aF6d-a7Bd-731b0c5A95bf\";\n\n\n\
          \n\n\n    volumeGroupsApi.getVolumeDiskById(volumeGroupExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    volume_group_ext_id = \"0eAABEae-0FAA-Df0B-dacf-7BFb3D66f43b\"\
          \n    \n    ext_id = \"edDb5a3E-C400-dB39-d8fA-5cBeaf18a1B4\"\n\n\n    try:\n\
          \        api_response = volume_groups_api.get_volume_disk_by_id(volumeGroupExtId=volume_group_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    volumeGroupExtId := \"Ed38f1dc-dbb1-2DFe-5C81-BCfEE1CB7C3E\"\
          \n    \n    extId := \"7B3CFacb-AAa9-ED0c-02ce-aCB0ECf3Ea0A\"\n\n\n    response,\
          \ error := VolumeGroupsApiInstance.GetVolumeDiskById(&volumeGroupExtId,\
          \ &extId)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.VolumeDisk)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/9DFCAdA6-4eF0-33CA-ff7F-7B8382afDAab/disks/15FAafBc-5656-D6fB-A4b3-a1DACF2EA9bD" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/aFFf0c8d-861A-1aE8-7BAd-6ECB7a5BFAcA/disks/ACf6baA0-0fa1-0F0C-eeBa-cfdAadfADFB6"
    put:
      tags:
      - VolumeGroups
      summary: Update a specified Volume Disk
      description: "Updates a specific Volume Disk identified by {extId}."
      operationId: updateVolumeDiskById
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 06dcf5f0-a7cd-4f16-997a-63e99271fc7b
      - name: extId
        in: path
        description: The external identifier of a Volume Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 2a9e95a1-a3df-45bf-ae47-88afb6583ac2
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 3e4bbb78-e162-4e00-857d-9b8a5859bdc2
      requestBody:
        description: "A model that represents a Volume Disk associated with a Volume\
          \ Group, supported by a backing file on DSF."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.VolumeDisk'
        required: true
      responses:
        "202":
          description: Returns the task ID corresponding to the Volume Disk update
            operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Update Volume Group Disk
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 15
        timeUnit: seconds
      - type: small
        count: 15
        timeUnit: seconds
      - type: large
        count: 15
        timeUnit: seconds
      - type: xlarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.VolumeDisk;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.GetVolumeDiskApiResponse;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.UpdateVolumeDiskApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        VolumeDisk volumeDisk = new VolumeDisk();\n\n        // VolumeDisk\
          \ object initializations here...\n        \n        String volumeGroupExtId\
          \ = \"cF1AFeBa-A3Fd-cfAA-ecFa-eEBec5caed6c\";\n        \n        String\
          \ extId = \"EFf4F6e2-fA46-Ed3D-aEC0-bAfFd9eDf5ea\";\n\n        // perform\
          \ GET call\n        GetVolumeDiskApiResponse getResponse = null;\n     \
          \   try {\n            getResponse = volumeGroupsApi.getVolumeDiskById(volumeGroupExtId,\
          \ extId);\n        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateVolumeDiskApiResponse updateVolumeDiskApiResponse\
          \ = volumeGroupsApi.updateVolumeDiskById(volumeGroupExtId, extId, volumeDisk,\
          \ opts);\n            System.out.println(updateVolumeDiskApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, VolumeDisk, GetVolumeDiskApiResponse\
          \ } from \"@nutanix-api/volumes-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let volumeDisk = new VolumeDisk();\n\n    // VolumeDisk\
          \ object initializations here...\n\n    \n    let volumeGroupExtId = \"\
          53a694d5-CDAA-b609-efdC-3c6BE0aac7Fc\";\n    \n    let extId = \"513c66e2-037f-f4E8-ce6E-1a4CA7C54625\"\
          ;\n\n\n    // Perform Get call\n    volumeGroupsApi.getVolumeDiskById(volumeGroupExtId,\
          \ extId).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        // Extract E-Tag\
          \ Header\n        let etagValue = ApiClient.getEtag(data);\n\n        volumeGroupsApi.updateVolumeDiskById(volumeGroupExtId,\
          \ extId, volumeDisk, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n            console.log(`API returned the following status code:\
          \ ${response.status}`);\n            console.log(data.getData());\n    \
          \    }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    volumeDisk = ntnx_volumes_py_client.VolumeDisk()\n\n    # VolumeDisk\
          \ object initializations here...\n    \n    volume_group_ext_id = \"D1BCfdCB-cD45-AeE2-CD10-DdACF4Cd33bf\"\
          \n    \n    ext_id = \"a4eca9EC-2B8f-435d-9532-Ee0D1ac0ddeE\"\n\n    try:\n\
          \        api_response = volume_groups_api.get_volume_disk_by_id(volumeGroupExtId=volume_group_ext_id,\
          \ extId=ext_id)\n    except ntnx_volumes_py_client.rest.ApiException as\
          \ e:\n        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_volumes_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = volume_groups_api.update_volume_disk_by_id(volumeGroupExtId=volume_group_ext_id,\
          \ extId=ext_id, body=volumeDisk, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_volumes_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    volumeDisk := import1.NewVolumeDisk()\n\n    // VolumeDisk object\
          \ initializations here...\n\n    \n    volumeGroupExtId := \"18fc5AC4-AE4C-fCDA-dCab-1e8a82c1BF5A\"\
          \n    \n    extId := \"CcCfFE1c-9bAC-F53b-CEfC-6d3e9FEa2b9f\"\n\n    getResponse,\
          \ err := VolumeGroupsApiInstance.GetVolumeDiskById(&volumeGroupExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VolumeGroupsApiInstance.UpdateVolumeDiskById(&volumeGroupExtId,\
          \ &extId, volumeDisk, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/FFF46E5F-4880-d9dd-CBe6-fFD478DBbdc1/disks/c92FF0f3-7FF3-8Caf-f3bb-AC0Ce1bAF9C2" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"index":0,"diskSizeBytes":0,"storageContainerId":"string","description":"string","diskDataSourceReference":{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"},"diskStorageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.DiskStorageFeatures"},"$objectType":"volumes.v4.config.VolumeDisk"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"index":0,"diskSizeBytes":0,"storageContainerId":"string","description":"string","diskDataSourceReference":{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"},"diskStorageFeatures":{"flashMode":{"isEnabled":false,"$objectType":"volumes.v4.config.FlashMode"},"$objectType":"volumes.v4.config.DiskStorageFeatures"},"$objectType":"volumes.v4.config.VolumeDisk"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/CdEACECc-A4fC-5e2A-7cFd-8BA4E5167d7B/disks/2DcaBc1E-233e-AfFC-f6DC-bBCb7B757695"
    delete:
      tags:
      - VolumeGroups
      summary: Delete a Volume Disk
      description: "Deletes a Volume Disk identified by {extId} in the Volume Group\
        \ identified by {volumeGroupExtId}."
      operationId: deleteVolumeDiskById
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 924abd43-6bef-4a44-b3b5-16f2ad6fc2a5
      - name: extId
        in: path
        description: The external identifier of a Volume Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c67de97b-a302-453f-9295-7cd235e7b0db
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 0a4cfff7-ab9c-42c4-bc01-c3b53ab1fb4e
      responses:
        "202":
          description: Task Id corresponding to the Volume Disk delete operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Delete Volume Group Disk
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.DeleteVolumeDiskApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String volumeGroupExtId = \"D99053d9-DaB6-aAEd-99cc-A83238dDd5f1\"\
          ;\n        \n        String extId = \"8EBd2bca-5b2B-a6Cc-1a8a-eaFBfADAB1bC\"\
          ;\n\n        try {\n            DeleteVolumeDiskApiResponse deleteVolumeDiskApiResponse\
          \ = volumeGroupsApi.deleteVolumeDiskById(volumeGroupExtId, extId);\n   \
          \         System.out.println(deleteVolumeDiskApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let volumeGroupExtId = \"daAbbaff-BB4D-FbFd-3Cae-dBf2dBCd2adb\"\
          ;\n    \n    let extId = \"eC0fD3ed-Fb5e-40CC-bBFB-fFc9B6EEBDCe\";\n\n\n\
          \n\n\n    volumeGroupsApi.deleteVolumeDiskById(volumeGroupExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    volume_group_ext_id = \"8d8D5CBD-199F-7e3D-6dc5-eD5c3d6ad7fd\"\
          \n    \n    ext_id = \"70D4c6f2-Ea1B-bDeb-e68a-aEfAAD6c4EfA\"\n\n\n    try:\n\
          \        api_response = volume_groups_api.delete_volume_disk_by_id(volumeGroupExtId=volume_group_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    volumeGroupExtId := \"A053fBED-d1df-47F3-177D-62AEaAc8a5Ca\"\
          \n    \n    extId := \"5dDBe9cE-adFd-b7EA-e11d-AeA7aB75E8a5\"\n\n\n    response,\
          \ error := VolumeGroupsApiInstance.DeleteVolumeDiskById(&volumeGroupExtId,\
          \ &extId)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/1ac31a3f-adcF-Be5e-eac1-dFC14Cdefd8c/disks/dC1B1aCc-1ddd-BFed-d346-d1fE3412a1f9" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/f4fDc1Ff-BaED-1fa6-82dE-6aD3Db4CDcCD/disks/D2aBEAA8-B58C-5C8D-8F88-2beEEfbfBbAE"
  /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/external-iscsi-attachments:
    get:
      tags:
      - VolumeGroups
      summary: List all the iSCSI attachments associated with the given Volume Group
      description: "Query the list of external iSCSI attachments for a Volume Group\
        \ identified by {extId}."
      operationId: listExternalIscsiAttachmentsByVolumeGroupId
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7feee66b-a334-49ad-ba99-09c93bb5a35d
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - clusterReference
          - extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - clusterReference
          - extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $expand
        in: query
        description: |
          A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported.
          - iscsiClient
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - clusterReference
          - extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Paginated list of external iSCSI attachments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/volumes.v4.0.config.IscsiClientAttachment'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/external-iscsi-attachments\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/external-iscsi-attachments\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/external-iscsi-attachments\
                  \ Get operation"
      deprecated: true
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group ISCSI Attachments
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.ListExternalIscsiAttachmentsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String volumeGroupExtId = \"C5c2dACb-cD0C-dEF6-dbc8-C2d2FEBAb5D0\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListExternalIscsiAttachmentsApiResponse listExternalIscsiAttachmentsApiResponse\
          \ = volumeGroupsApi.listExternalIscsiAttachmentsByVolumeGroupId(volumeGroupExtId,\
          \ page, limit, null, null, null, null);\n            System.out.println(listExternalIscsiAttachmentsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let volumeGroupExtId = \"cfFF5E80-9Cb7-FBD7-40bF-eE1CCe6ED7fE\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n    opts[\"$expand\"\
          ] = \"string_sample_data\";\n    opts[\"$select\"] = \"string_sample_data\"\
          ;\n\n\n\n\n    volumeGroupsApi.listExternalIscsiAttachmentsByVolumeGroupId(volumeGroupExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    volume_group_ext_id = \"B9Ef642A-f43b-A0Af-2f5A-fabccBdA5a3e\"\
          \n    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = volume_groups_api.list_external_iscsi_attachments_by_volume_group_id(volumeGroupExtId=volume_group_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    volumeGroupExtId := \"AAEdbcbF-AE6b-EC6F-eEFE-9E1f9d1D8dEC\"\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VolumeGroupsApiInstance.ListExternalIscsiAttachmentsByVolumeGroupId(&volumeGroupExtId,\
          \ &page_, &limit_, nil, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.IscsiClientAttachment)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/A91E3Db1-Ba26-3c77-FEff-BaFd8CB86E6e/external-iscsi-attachments?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$expand=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/8A79D2F0-Ee1F-B9fd-Fd7F-5F52De1d16eF/external-iscsi-attachments?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$expand=string_sample_data&$page=0&$select=string_sample_data"
  /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-iscsi-client:
    post:
      tags:
      - VolumeGroups
      summary: Attach an iSCSI client to the given Volume Group
      description: "Attaches iSCSI initiator to a Volume Group identified by {extId}."
      operationId: attachIscsiClient
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 629ecbdf-2378-4056-b031-6f2c0e0c29fc
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 5ad58356-ab16-42b9-8e46-5e0c55228610
      requestBody:
        description: A model that represents an iSCSI client that can be associated
          with a Volume Group as an external attachment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.IscsiClient'
        required: true
      responses:
        "202":
          description: Status of the iSCSI client attachment operation on the Volume
            Group.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-iscsi-client\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-iscsi-client\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-iscsi-client\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Attach Volume Group To External ISCSI Client
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.IscsiClient;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.AttachIscsiClientApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        IscsiClient iscsiClient = new IscsiClient();\n\n        // IscsiClient\
          \ object initializations here...\n        \n        String extId = \"0D77C7FD-60bb-0AeC-eB1E-BdBF16ECA44c\"\
          ;\n\n        try {\n            AttachIscsiClientApiResponse attachIscsiClientApiResponse\
          \ = volumeGroupsApi.attachIscsiClient(extId, iscsiClient);\n           \
          \ System.out.println(attachIscsiClientApiResponse.toString());\n\n     \
          \   } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, IscsiClient } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let iscsiClient = new IscsiClient();\n\n    // IscsiClient\
          \ object initializations here...\n\n    \n    let extId = \"e207d5ae-36DE-B541-9a7E-8eEAbAfcAC5B\"\
          ;\n\n\n\n\n\n    volumeGroupsApi.attachIscsiClient(extId, iscsiClient).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    iscsiClient = ntnx_volumes_py_client.IscsiClient()\n\n    # IscsiClient\
          \ object initializations here...\n    \n    ext_id = \"f7a4Fb16-CFC2-9a87-FACB-E5CbcD768a9d\"\
          \n\n\n    try:\n        api_response = volume_groups_api.attach_iscsi_client(extId=ext_id,\
          \ body=iscsiClient)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    iscsiClient := import1.NewIscsiClient()\n\n    // IscsiClient object\
          \ initializations here...\n\n    \n    extId := \"f2CBFDcA-5EeD-b2fe-BFfe-B2bC3bCDB3b6\"\
          \n\n\n    response, error := VolumeGroupsApiInstance.AttachIscsiClient(&extId,\
          \ iscsiClient)\n    if error != nil {\n        fmt.Println(error)\n    \
          \    return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/1DDEda72-e8ca-24c0-AE6C-7aC5C1eEDa9e/$actions/attach-iscsi-client" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"iscsiInitiatorName":"string","iscsiInitiatorNetworkId":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"clientSecret":"string","enabledAuthentications":"$UNKNOWN","attachedTargets":[{"numVirtualTargets":0,"iscsiTargetName":"string","$objectType":"volumes.v4.config.TargetParam"}],"numVirtualTargets":0,"clusterReference":"string","attachmentSite":"$UNKNOWN","$objectType":"volumes.v4.config.IscsiClient"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"iscsiInitiatorName":"string","iscsiInitiatorNetworkId":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"clientSecret":"string","enabledAuthentications":"$UNKNOWN","attachedTargets":[{"numVirtualTargets":0,"iscsiTargetName":"string","$objectType":"volumes.v4.config.TargetParam"}],"numVirtualTargets":0,"clusterReference":"string","attachmentSite":"$UNKNOWN","$objectType":"volumes.v4.config.IscsiClient"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/8c7B1d95-AbE6-EdaF-eaDB-BACE65dd84a3/$actions/attach-iscsi-client"
  /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-iscsi-client:
    post:
      tags:
      - VolumeGroups
      summary: Detach an iSCSi client from the given Volume Group
      description: "Detaches iSCSI initiator identified by {extId} from a Volume Group\
        \ identified by {volumeGroupExtId}."
      operationId: detachIscsiClient
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 8173a21d-2c50-4e1d-a9f4-e7df86ceb2ad
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 9c6eb62a-21fa-42a1-9438-5361e76758c2
      requestBody:
        description: A model that represents an iSCSI client that can be associated
          with a Volume Group as an external attachment. It contains the minimal properties
          required for the attachment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.IscsiClientAttachment'
        required: true
      responses:
        "202":
          description: Status of the iSCSI client detachment operation on the Volume
            Group.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-iscsi-client\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-iscsi-client\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-iscsi-client\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Detach Volume Group From External ISCSI Client
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.IscsiClientAttachment;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.DetachIscsiClientApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        IscsiClientAttachment iscsiClientAttachment = new IscsiClientAttachment();\n\
          \n        // IscsiClientAttachment object initializations here...\n    \
          \    \n        String extId = \"aCB534ea-CbAA-fbFE-A3Cd-ddEDAFffcEDb\";\n\
          \n        try {\n            DetachIscsiClientApiResponse detachIscsiClientApiResponse\
          \ = volumeGroupsApi.detachIscsiClient(extId, iscsiClientAttachment);\n \
          \           System.out.println(detachIscsiClientApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, IscsiClientAttachment } from\
          \ \"@nutanix-api/volumes-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet volumeGroupsApi\
          \ = new VolumeGroupsApi(apiClientInstance);\n\nfunction sample() {\n   \
          \ let iscsiClientAttachment = new IscsiClientAttachment();\n\n    // IscsiClientAttachment\
          \ object initializations here...\n\n    \n    let extId = \"63c0c199-EE62-5Bb9-61C2-DbeE1aec4b8C\"\
          ;\n\n\n\n\n\n    volumeGroupsApi.detachIscsiClient(extId, iscsiClientAttachment).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    iscsiClientAttachment = ntnx_volumes_py_client.IscsiClientAttachment()\n\
          \n    # IscsiClientAttachment object initializations here...\n    \n   \
          \ ext_id = \"E2D5Cd0A-BDa1-BCb1-Fa5E-6C4e7f9D2b64\"\n\n\n    try:\n    \
          \    api_response = volume_groups_api.detach_iscsi_client(extId=ext_id,\
          \ body=iscsiClientAttachment)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    iscsiClientAttachment := import1.NewIscsiClientAttachment()\n\n  \
          \  // IscsiClientAttachment object initializations here...\n\n    \n   \
          \ extId := \"AfbEAAf7-D8fE-fFB0-De4f-Bb0CaCdD0ed9\"\n\n\n    response, error\
          \ := VolumeGroupsApiInstance.DetachIscsiClient(&extId, iscsiClientAttachment)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/eFB8BBDd-eaC8-f1fc-7F9C-E1296bFBe5E4/$actions/detach-iscsi-client" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"extId":"string","clusterReference":"string","$objectType":"volumes.v4.config.IscsiClientAttachment"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"extId":"string","clusterReference":"string","$objectType":"volumes.v4.config.IscsiClientAttachment"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/F9dc4baB-C5fb-373E-8cad-5e2Ce30EACFc/$actions/detach-iscsi-client"
  /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/vm-attachments:
    get:
      tags:
      - VolumeGroups
      summary: List all the VM attachments for a Volume Group
      description: "Query the list of VM attachments for a Volume Group identified\
        \ by {extId}."
      operationId: listVmAttachmentsByVolumeGroupId
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1e3ab246-d742-4b38-b366-5972476daa98
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Paginated list of VM attachments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/volumes.v4.0.config.VmAttachment'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/vm-attachments\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/vm-attachments\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/vm-attachments\
                  \ Get operation"
      deprecated: true
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group VM Attachments
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.ListVmAttachmentsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String volumeGroupExtId = \"E2BdaCAe-Af39-3fB4-dEBD-3eF42Ac6036D\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVmAttachmentsApiResponse listVmAttachmentsApiResponse\
          \ = volumeGroupsApi.listVmAttachmentsByVolumeGroupId(volumeGroupExtId, page,\
          \ limit, null, null);\n            System.out.println(listVmAttachmentsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let volumeGroupExtId = \"ACabacbb-fdC1-bAda-eDab-FAD2a1c7fC8f\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n\n\n\n\n    volumeGroupsApi.listVmAttachmentsByVolumeGroupId(volumeGroupExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    volume_group_ext_id = \"CEe9eAE6-CeEe-21ae-aacf-DcAF710DCDdF\"\
          \n    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = volume_groups_api.list_vm_attachments_by_volume_group_id(volumeGroupExtId=volume_group_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    volumeGroupExtId := \"8EbcB68A-A6a7-dBFE-fAD4-44f6A8fa8F0B\"\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VolumeGroupsApiInstance.ListVmAttachmentsByVolumeGroupId(&volumeGroupExtId,\
          \ &page_, &limit_, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.VmAttachment)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/Fa51C0be-b0FA-f5BA-aefF-c9DBFE0fF2A3/vm-attachments?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/dFEFBD7F-bBef-CAbe-D1AE-3e4FCcF7fadB/vm-attachments?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0"
  /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-vm:
    post:
      tags:
      - VolumeGroups
      summary: Attach an AHV VM to the given Volume Group
      description: "Attaches VM to a Volume Group identified by {extId}."
      operationId: attachVm
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1cdb5b48-fb2c-41b6-b751-b504117ee3e2
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 3a9ce3a7-e6e6-4001-8826-3e83b1e51868
      requestBody:
        description: A model that represents a VM reference that can be associated
          with a Volume Group as an AHV hypervisor attachment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.VmAttachment'
        required: true
      responses:
        "202":
          description: "Status of the VM attach operation, on the Volume Group."
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-vm\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-vm\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-vm\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Attach Volume Group To AHV VM
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.VmAttachment;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.AttachVmApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\n\npublic class JavaSdkSample\
          \ {\n    public static void main(String[] args) {\n        // Configure\
          \ the client\n        ApiClient apiClient = new ApiClient();\n        //\
          \ IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        VmAttachment vmAttachment = new VmAttachment();\n\n        //\
          \ VmAttachment object initializations here...\n        vmAttachment.setExtId(\"\
          bD7eB1C3-e09B-FE84-F8aa-4C5ceAF8F7Da\");  // required field\n        \n\
          \        String extId = \"CcABbaFF-1Fef-cdeC-40Dc-D08B8BaE728e\";\n\n  \
          \      try {\n            AttachVmApiResponse attachVmApiResponse = volumeGroupsApi.attachVm(extId,\
          \ vmAttachment);\n            System.out.println(attachVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, VmAttachment } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let vmAttachment = new VmAttachment();\n\n    // VmAttachment\
          \ object initializations here...\n    vmAttachment.setExtId(\"ef0CCd90-BD68-ddF9-E8bc-CCaDcCCDbb3e\"\
          );  // required field\n\n    \n    let extId = \"2fEB31df-Dc53-ACDc-c9E5-3adEcdA41F50\"\
          ;\n\n\n\n\n\n    volumeGroupsApi.attachVm(extId, vmAttachment).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    vmAttachment = ntnx_volumes_py_client.VmAttachment()\n\n    # VmAttachment\
          \ object initializations here...\n    vmAttachment.ext_id = \"CBf653ab-22BF-D8A7-9bb6-EcFAb7bD40a0\"\
          \  # required field\n    \n    ext_id = \"Ed1fcCEc-cbFF-BA28-ffdA-8cea4a0B1A4F\"\
          \n\n\n    try:\n        api_response = volume_groups_api.attach_vm(extId=ext_id,\
          \ body=vmAttachment)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    vmAttachment := import1.NewVmAttachment()\n\n    // VmAttachment object\
          \ initializations here...\n\n    \n    extId := \"9e91b1C8-eB2C-cEd4-aBDA-E16CaE3A6bea\"\
          \n\n\n    response, error := VolumeGroupsApiInstance.AttachVm(&extId, vmAttachment)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/0eFECb5D-fFC8-bbFc-59f1-9DE2ADb68E5C/$actions/attach-vm" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"extId":"string","index":0,"$objectType":"volumes.v4.config.VmAttachment"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"extId":"string","index":0,"$objectType":"volumes.v4.config.VmAttachment"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/A279bb0D-eaBa-e6Ae-ECFF-Cf8ecA8e2cA8/$actions/attach-vm"
  /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-vm:
    post:
      tags:
      - VolumeGroups
      summary: Detach an AHV VM from the given Volume Group
      description: "Detaches VM identified by {extId} from a Volume Group identified\
        \ by {volumeGroupExtId}."
      operationId: detachVm
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d09f033e-c851-4ca4-acfd-5e051b6a4692
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: f8a7f68d-3fec-41d2-9daa-e1036fce507e
      requestBody:
        description: A model that represents a VM reference that can be associated
          with a Volume Group as an AHV hypervisor attachment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.VmAttachment'
        required: true
      responses:
        "202":
          description: Status of the VM detach operation on the Volume Group.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-vm\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-vm\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-vm\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Detach Volume Group From AHV VM
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.VmAttachment;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.DetachVmApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\n\npublic class JavaSdkSample\
          \ {\n    public static void main(String[] args) {\n        // Configure\
          \ the client\n        ApiClient apiClient = new ApiClient();\n        //\
          \ IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        VmAttachment vmAttachment = new VmAttachment();\n\n        //\
          \ VmAttachment object initializations here...\n        vmAttachment.setExtId(\"\
          ebF883Ce-4D46-afbD-aA0D-0871aedD8e43\");  // required field\n        \n\
          \        String extId = \"ac25af03-5bdE-46A4-e5DE-35e1ee6dC6A3\";\n\n  \
          \      try {\n            DetachVmApiResponse detachVmApiResponse = volumeGroupsApi.detachVm(extId,\
          \ vmAttachment);\n            System.out.println(detachVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, VmAttachment } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let vmAttachment = new VmAttachment();\n\n    // VmAttachment\
          \ object initializations here...\n    vmAttachment.setExtId(\"Faa9b44e-87Cf-2CE1-dA9B-dbeEBcAd3dfA\"\
          );  // required field\n\n    \n    let extId = \"Dea3437f-9A5b-e5DC-2a8a-Ed5BCe25cB4C\"\
          ;\n\n\n\n\n\n    volumeGroupsApi.detachVm(extId, vmAttachment).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    vmAttachment = ntnx_volumes_py_client.VmAttachment()\n\n    # VmAttachment\
          \ object initializations here...\n    vmAttachment.ext_id = \"C8D2ffE8-CBc1-1aAF-a3D7-Eca65928eABc\"\
          \  # required field\n    \n    ext_id = \"9D6DeFB3-deE9-FDf6-1183-3Ce6A85Bf0Ff\"\
          \n\n\n    try:\n        api_response = volume_groups_api.detach_vm(extId=ext_id,\
          \ body=vmAttachment)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    vmAttachment := import1.NewVmAttachment()\n\n    // VmAttachment object\
          \ initializations here...\n\n    \n    extId := \"861cDC5b-E7ae-f3df-5A89-86ee769cbBf2\"\
          \n\n\n    response, error := VolumeGroupsApiInstance.DetachVm(&extId, vmAttachment)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/a7D7Fd9a-4010-F1Db-3BC2-dDbcA5aBc9C6/$actions/detach-vm" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"extId":"string","index":0,"$objectType":"volumes.v4.config.VmAttachment"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"extId":"string","index":0,"$objectType":"volumes.v4.config.VmAttachment"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/3daaB2E4-FB6e-FF5C-e8Fe-7bc7AeFa7cda/$actions/detach-vm"
  /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/category-associations:
    get:
      tags:
      - VolumeGroups
      summary: List all the category details that are associated with the Volume Group
      description: "Query the category details that are associated with the Volume\
        \ Group identified by {volumeGroupExtId}."
      operationId: listCategoryAssociationsByVolumeGroupId
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1424a657-255c-4c8f-ae75-762a6e6c7947
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      responses:
        "200":
          description: Paginated list of category details associated with the Volume
            Group.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/volumes.v4.0.config.CategoryDetails'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/category-associations\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/category-associations\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/category-associations\
                  \ Get operation"
      deprecated: true
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group Category Associations
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.ListCategoryAssociationsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String volumeGroupExtId = \"c3faE1ed-BCcC-ffd8-b2b3-ada8fa62A6cb\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListCategoryAssociationsApiResponse listCategoryAssociationsApiResponse\
          \ = volumeGroupsApi.listCategoryAssociationsByVolumeGroupId(volumeGroupExtId,\
          \ page, limit);\n            System.out.println(listCategoryAssociationsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let volumeGroupExtId = \"c0ddccC5-EBdb-adeE-518e-Ee6DA6F2A0ea\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n\n\n\n\n    volumeGroupsApi.listCategoryAssociationsByVolumeGroupId(volumeGroupExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    volume_group_ext_id = \"AcfeddD6-CeDD-F6ab-C4A2-Fa51B9Ab6bF4\"\
          \n    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = volume_groups_api.list_category_associations_by_volume_group_id(volumeGroupExtId=volume_group_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    volumeGroupExtId := \"7eff0b84-beFF-996a-d7e9-BDac0dc8A48B\"\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VolumeGroupsApiInstance.ListCategoryAssociationsByVolumeGroupId(&volumeGroupExtId,\
          \ &page_, &limit_)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.CategoryDetails)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/AfcE6Ade-dcEF-d1AF-e84E-5EDD3Ce2aBBE/category-associations?$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/7DeeCbEE-fa00-cCC1-DAD1-75AeCEc3Bb4b/category-associations?$limit=50&$page=0"
  /volumes/v4.0/config/volume-groups/{extId}/$actions/associate-category:
    post:
      tags:
      - VolumeGroups
      summary: Associate category to a Volume Group
      description: "Associates a category to a Volume Group identified by {extId}."
      operationId: associateCategory
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 54d75100-6542-4136-9437-c87f8ff5b4b1
      requestBody:
        description: The list of categories to be associated/disassociated with the
          Volume Group. This is a mandatory field.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.CategoryEntityReferences'
        required: true
      responses:
        "202":
          description: Returns the status of the associate category operation on the
            Volume Group.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/associate-category\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/associate-category\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/associate-category\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Associate Volume Group Categories
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.CategoryEntityReferences;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.AssociateCategoryApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        CategoryEntityReferences categoryEntityReferences = new CategoryEntityReferences();\n\
          \n        // CategoryEntityReferences object initializations here...\n \
          \       \n        String extId = \"CA8e0FfD-aD84-ecDD-cBAf-D4dcC4ADe6f7\"\
          ;\n\n        try {\n            AssociateCategoryApiResponse associateCategoryApiResponse\
          \ = volumeGroupsApi.associateCategory(extId, categoryEntityReferences);\n\
          \            System.out.println(associateCategoryApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, CategoryEntityReferences }\
          \ from \"@nutanix-api/volumes-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let categoryEntityReferences = new CategoryEntityReferences();\n\
          \n    // CategoryEntityReferences object initializations here...\n\n   \
          \ \n    let extId = \"88a2d0ea-acCA-e0B5-f2cA-06dEF71671B9\";\n\n\n\n\n\n\
          \    volumeGroupsApi.associateCategory(extId, categoryEntityReferences).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    categoryEntityReferences = ntnx_volumes_py_client.CategoryEntityReferences()\n\
          \n    # CategoryEntityReferences object initializations here...\n    \n\
          \    ext_id = \"cbAAf9A2-e4F2-b1c8-EF19-FbDA03fdC7ec\"\n\n\n    try:\n \
          \       api_response = volume_groups_api.associate_category(extId=ext_id,\
          \ body=categoryEntityReferences)\n        print(api_response)\n    except\
          \ ntnx_volumes_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    categoryEntityReferences := import1.NewCategoryEntityReferences()\n\
          \n    // CategoryEntityReferences object initializations here...\n\n   \
          \ \n    extId := \"fCB2Dabd-C5a0-Bd4D-8d64-DC41ff685Ce0\"\n\n\n    response,\
          \ error := VolumeGroupsApiInstance.AssociateCategory(&extId, categoryEntityReferences)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/2D787Ee4-BFcA-e7dF-a53c-7caFBB220ff9/$actions/associate-category" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"categories":[{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"}],"$objectType":"volumes.v4.config.CategoryEntityReferences"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"categories":[{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"}],"$objectType":"volumes.v4.config.CategoryEntityReferences"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/ACc5b2ca-BDCd-fB5D-Ca3f-f06FdAFBdaB6/$actions/associate-category"
  /volumes/v4.0/config/volume-groups/{extId}/$actions/disassociate-category:
    post:
      tags:
      - VolumeGroups
      summary: Disassociate category from a Volume Group
      description: "Disassociates a category from a Volume Group identified by {extId}."
      operationId: disassociateCategory
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 3e05bb6a-a87b-45de-96ca-e3dfaaedcc60
      requestBody:
        description: The list of categories to be associated/disassociated with the
          Volume Group. This is a mandatory field.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.CategoryEntityReferences'
        required: true
      responses:
        "202":
          description: Return the status of the disassociate category operation on
            the Volume Group.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/disassociate-category\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/disassociate-category\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/disassociate-category\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Disassociate Volume Group Categories
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.CategoryEntityReferences;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.DisassociateCategoryApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        CategoryEntityReferences categoryEntityReferences = new CategoryEntityReferences();\n\
          \n        // CategoryEntityReferences object initializations here...\n \
          \       \n        String extId = \"999b46AF-Bc2D-23A2-b6bE-a2eB8c3Bb9bA\"\
          ;\n\n        try {\n            DisassociateCategoryApiResponse disassociateCategoryApiResponse\
          \ = volumeGroupsApi.disassociateCategory(extId, categoryEntityReferences);\n\
          \            System.out.println(disassociateCategoryApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, CategoryEntityReferences }\
          \ from \"@nutanix-api/volumes-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let categoryEntityReferences = new CategoryEntityReferences();\n\
          \n    // CategoryEntityReferences object initializations here...\n\n   \
          \ \n    let extId = \"EFBAe6Fd-a2ac-e77a-acFf-74f7DCa2dBba\";\n\n\n\n\n\n\
          \    volumeGroupsApi.disassociateCategory(extId, categoryEntityReferences).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    categoryEntityReferences = ntnx_volumes_py_client.CategoryEntityReferences()\n\
          \n    # CategoryEntityReferences object initializations here...\n    \n\
          \    ext_id = \"EcADbF5b-Cd76-D4c2-ce4b-bFbbCbba7D4B\"\n\n\n    try:\n \
          \       api_response = volume_groups_api.disassociate_category(extId=ext_id,\
          \ body=categoryEntityReferences)\n        print(api_response)\n    except\
          \ ntnx_volumes_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    categoryEntityReferences := import1.NewCategoryEntityReferences()\n\
          \n    // CategoryEntityReferences object initializations here...\n\n   \
          \ \n    extId := \"cc0F12C3-9aE6-eE8d-6F55-E1C528f8C45B\"\n\n\n    response,\
          \ error := VolumeGroupsApiInstance.DisassociateCategory(&extId, categoryEntityReferences)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/DcFD74Ef-7DD1-cD2b-BdA9-a0e02edbBCba/$actions/disassociate-category" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"categories":[{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"}],"$objectType":"volumes.v4.config.CategoryEntityReferences"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"categories":[{"extId":"string","name":"string","uris":["string"],"entityType":"$UNKNOWN","$objectType":"common.v1.config.EntityReference"}],"$objectType":"volumes.v4.config.CategoryEntityReferences"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/CfE0CCD7-ABFe-cF92-A9C3-aD9d7C2B3BdD/$actions/disassociate-category"
  /volumes/v4.0/config/volume-groups/{extId}/$actions/revert:
    post:
      tags:
      - VolumeGroups
      summary: Revert a Volume Group
      description: Reverts a Volume Group identified by Volume Group external identifier.
        This API performs an in-place restore from a specified Volume Group recovery
        point.
      operationId: revertVolumeGroup
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c3ed0675-f478-40ad-8d94-03a2b1fd0a74
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: f4d12837-55ea-4afd-9635-ac89477cfd6c
      requestBody:
        description: Specify the Volume Group recovery point ID to which the Volume
          Group would be reverted.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumes.v4.0.config.RevertSpec'
        required: true
      responses:
        "202":
          description: Returns task ID to monitor the progress of Volume Group revert
            operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/revert\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/revert\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/revert\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Revert Volume Group
        roleList:
        - Super Admin
        - Prism Admin
        - Self-Service Admin
        - Disaster Recovery Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 5
        timeUnit: seconds
      - type: xlarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.RevertSpec;\n\
          import com.nutanix.dp1.vol.volumes.v4.config.RevertVolumeGroupApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        RevertSpec revertSpec = new RevertSpec();\n\n        // RevertSpec\
          \ object initializations here...\n        revertSpec.setVolumeGroupRecoveryPointExtId(\"\
          52eFb8F8-8d4a-3eFA-AFDE-b9AeCE091f7b\");  // required field\n        \n\
          \        String extId = \"cbFFFcfA-BA63-FD24-15AF-90baaA4adA7E\";\n\n  \
          \      try {\n            RevertVolumeGroupApiResponse revertVolumeGroupApiResponse\
          \ = volumeGroupsApi.revertVolumeGroup(extId, revertSpec);\n            System.out.println(revertVolumeGroupApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi, RevertSpec } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n    let revertSpec = new RevertSpec();\n\n    // RevertSpec\
          \ object initializations here...\n    revertSpec.setVolumeGroupRecoveryPointExtId(\"\
          91e9deAd-5aeE-DF5B-Ea24-7feeC9bcaaa2\");  // required field\n\n    \n  \
          \  let extId = \"FCE4EdbC-FFCf-F8EA-5d3e-8b8fa7adA2B8\";\n\n\n\n\n\n   \
          \ volumeGroupsApi.revertVolumeGroup(extId, revertSpec).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    revertSpec = ntnx_volumes_py_client.RevertSpec()\n\n    # RevertSpec\
          \ object initializations here...\n    revertSpec.volume_group_recovery_point_ext_id\
          \ = \"A9af5Cd8-29fC-bFc3-eacA-b1f92dF7A7aF\"  # required field\n    \n \
          \   ext_id = \"E70B2dAF-E4eB-4B09-BBaf-BdFBfBEcdceC\"\n\n\n    try:\n  \
          \      api_response = volume_groups_api.revert_volume_group(extId=ext_id,\
          \ body=revertSpec)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    revertSpec := import1.NewRevertSpec()\n\n    // RevertSpec object\
          \ initializations here...\n\n    \n    extId := \"6CFEce4E-BeC4-2F1e-cBbA-BaB6EfD7A6CB\"\
          \n\n\n    response, error := VolumeGroupsApiInstance.RevertVolumeGroup(&extId,\
          \ revertSpec)\n    if error != nil {\n        fmt.Println(error)\n     \
          \   return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/0d7EbCdb-3CbB-8CEb-db0d-fcED9Acf2d2D/$actions/revert" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"volumeGroupRecoveryPointExtId":"string","$objectType":"volumes.v4.config.RevertSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"volumeGroupRecoveryPointExtId":"string","$objectType":"volumes.v4.config.RevertSpec"} \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/BBBddAb9-0df0-d9FA-F89D-cba31D75Ecda/$actions/revert"
  /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/metadata:
    get:
      tags:
      - VolumeGroups
      summary: Fetch metadata information associated with a Volume Group.
      description: "Query for metadata information which is associated with the Volume\
        \ Group identified by {extId}."
      operationId: getVolumeGroupMetadataById
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ff9d2a26-0380-48e0-8b6b-a5cc76867297
      responses:
        "200":
          description: Metadata information associated with the Volume Group.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/common.v1.0.config.Metadata'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/metadata\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/metadata\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/metadata\
                  \ Get operation"
      deprecated: true
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group Metadata
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 25
        timeUnit: seconds
      - type: large
        count: 25
        timeUnit: seconds
      - type: xlarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.config.GetVolumeGroupMetadataApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String volumeGroupExtId = \"79D7fdAd-b3a9-F8b8-CdeD-a6FB8Be88EAC\"\
          ;\n\n        try {\n            GetVolumeGroupMetadataApiResponse getVolumeGroupMetadataApiResponse\
          \ = volumeGroupsApi.getVolumeGroupMetadataById(volumeGroupExtId);\n    \
          \        System.out.println(getVolumeGroupMetadataApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let volumeGroupExtId = \"E5afA8fc-4fa8-6cAf-aaed-a17c6eebBEce\"\
          ;\n\n\n\n\n\n    volumeGroupsApi.getVolumeGroupMetadataById(volumeGroupExtId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\n\nif __name__ == \"__main__\":\n\
          \    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    volume_group_ext_id = \"b47EcfB9-Fe1e-62E0-AFfe-C2FCC1CF6ee6\"\
          \n\n\n    try:\n        api_response = volume_groups_api.get_volume_group_metadata_by_id(volumeGroupExtId=volume_group_ext_id)\n\
          \        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/common/v1/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    volumeGroupExtId := \"a9D0f1fe-78F8-bdab-D1cb-8Fcf88dcEf67\"\
          \n\n\n    response, error := VolumeGroupsApiInstance.GetVolumeGroupMetadataById(&volumeGroupExtId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.Metadata)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/eAF84A5e-1Fed-2BAf-eeAF-CA2DAaCDbE5e/metadata" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/config/volume-groups/a03cA4fC-EaCf-051C-1Aad-c3Ece0EB0cbB/metadata"
  /volumes/v4.0/stats/volume-groups/{extId}:
    get:
      tags:
      - VolumeGroups
      summary: Get statistics for a Volume Group
      description: "Query the Volume Group stats identified by {extId}."
      operationId: getVolumeGroupStats
      parameters:
      - name: extId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4572dfb1-6321-469e-80bc-059771fc6f61
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 41
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - controllerAvgIOLatencyUsecs
          - controllerAvgReadIOLatencyUsecs
          - controllerAvgWriteIOLatencyUsecs
          - controllerIOBandwidthKBps
          - controllerNumIOPS
          - controllerNumReadIOPS
          - controllerNumWriteIOPS
          - controllerReadIOBandwidthKBps
          - controllerUserBytes
          - controllerWriteIOBandwidthKBps
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Details of the queried Volume Group stats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.stats.VolumeGroupStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/stats/volume-groups/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/stats/volume-groups/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/stats/volume-groups/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group Stats
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.stats.GetVolumeGroupStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String extId = \"FFDb2CCA-A8D0-CeD7-6fBA-9FE51bcDEb6D\"\
          ;\n        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ startTime = OffsetDateTime.now();\n        // Datetime needs to be in\
          \ RFC3339 format\n        OffsetDateTime endTime = OffsetDateTime.now();\n\
          \        \n        int samplingInterval = 1;\n        \n        Object statType\
          \ = SOME_RAW_DATA;\n\n        try {\n            GetVolumeGroupStatsApiResponse\
          \ getVolumeGroupStatsApiResponse = volumeGroupsApi.getVolumeGroupStats(extId,\
          \ startTime, endTime, samplingInterval, statType, null);\n            System.out.println(getVolumeGroupStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let extId = \"6DCAad80-5E9B-E1fd-Fd2E-aEeF0ca4AfAA\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $startTime = \"\
          2021-01-01T00:00:00-08:00\";\n    //Datetime needs to be in RFC3339 format\n\
          \    let $endTime = \"2021-01-01T00:00:00-08:00\";\n\n    // Construct Optional\
          \ Parameters\n    var opts = {};\n    opts[\"$samplingInterval\"] = 1;\n\
          \    opts[\"$statType\"] = SOME_RAW_DATA;\n    opts[\"$select\"] = \"string_sample_data\"\
          ;\n\n\n\n\n    volumeGroupsApi.getVolumeGroupStats(extId, $startTime, $endTime,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\nimport datetime\n\nif __name__ ==\
          \ \"__main__\":\n    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    ext_id = \"fb0B36AB-aFcE-b29d-5a6a-fCeEea3DF42a\"\n    # Datetime\
          \ needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = volume_groups_api.get_volume_group_stats(extId=ext_id,\
          \ _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    extId := \"fFf3a4db-bB0B-DFAC-dD6A-4E98e4AC9db3\"\n    // Datetime\
          \ needs to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ VolumeGroupsApiInstance.GetVolumeGroupStats(&extId, &startTime_, &endTime_,\
          \ &samplingInterval_, &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.VolumeGroupStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/stats/volume-groups/6FD1b59f-AdBE-F62C-Fbbf-Ec0da047f1CB?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/stats/volume-groups/cbdeCfaE-BcaD-DDfB-C68f-Dbc74Bac3FAb?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /volumes/v4.0/stats/volume-groups/{volumeGroupExtId}/disks/{extId}:
    get:
      tags:
      - VolumeGroups
      summary: Get statistics for a Volume Disk
      description: "Query the Volume Disk stats identified by {diskExtId}."
      operationId: getVolumeDiskStats
      parameters:
      - name: volumeGroupExtId
        in: path
        description: The external identifier of a Volume Group.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 452d0b7f-b000-4ff7-9d48-911df2585c9a
      - name: extId
        in: path
        description: The external identifier of a Volume Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: cdb79e18-a475-4ab5-80fb-174b6b678e92
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 85
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - controllerAvgIOLatencyUsecs
          - controllerAvgReadIOLatencyUsecs
          - controllerAvgWriteIOLatencyUsecs
          - controllerIOBandwidthKBps
          - controllerNumIOPS
          - controllerNumReadIOPS
          - controllerNumWriteIOPS
          - controllerReadIOBandwidthKBps
          - controllerUserBytes
          - controllerWriteIOBandwidthKBps
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Details of the queried Volume Disk stats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.stats.VolumeDiskStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/stats/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/stats/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /volumes/v4.0/stats/volume-groups/{volumeGroupExtId}/disks/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: View Volume Group Disk Stats
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Storage Viewer
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vol.java.client.ApiClient;\n\
          import com.nutanix.vol.java.client.api.VolumeGroupsApi;\nimport com.nutanix.dp1.vol.volumes.v4.stats.GetVolumeDiskStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VolumeGroupsApi volumeGroupsApi = new VolumeGroupsApi(apiClient);\n\
          \n        \n        String volumeGroupExtId = \"2CdCfC2d-CCdd-cBfd-2FAB-6aE6fA4C4BBf\"\
          ;\n        \n        String extId = \"d15bFb9A-bA85-4ACa-ccDA-D1AEbFfDee5b\"\
          ;\n        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ startTime = OffsetDateTime.now();\n        // Datetime needs to be in\
          \ RFC3339 format\n        OffsetDateTime endTime = OffsetDateTime.now();\n\
          \        \n        int samplingInterval = 1;\n        \n        Object statType\
          \ = SOME_RAW_DATA;\n\n        try {\n            GetVolumeDiskStatsApiResponse\
          \ getVolumeDiskStatsApiResponse = volumeGroupsApi.getVolumeDiskStats(volumeGroupExtId,\
          \ extId, startTime, endTime, samplingInterval, statType, null);\n      \
          \      System.out.println(getVolumeDiskStatsApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VolumeGroupsApi } from \"@nutanix-api/volumes-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let volumeGroupsApi = new VolumeGroupsApi(apiClientInstance);\n\nfunction\
          \ sample() {\n\n    \n    let volumeGroupExtId = \"B8Af8Bd1-8e5A-fEa7-0CEa-5feD4bEBBaC0\"\
          ;\n    \n    let extId = \"C8d1EcAF-1F70-ECc2-ffBb-6FA2c5CfbCBD\";\n   \
          \ //Datetime needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    volumeGroupsApi.getVolumeDiskStats(volumeGroupExtId,\
          \ extId, $startTime, $endTime, opts).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_volumes_py_client\nimport datetime\n\nif __name__ ==\
          \ \"__main__\":\n    # Configure the client\n    config = ntnx_volumes_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_volumes_py_client.ApiClient(configuration=config)\n \
          \   volume_groups_api = ntnx_volumes_py_client.VolumeGroupsApi(api_client=client)\n\
          \    \n    volume_group_ext_id = \"CcbeB10d-8E7B-e9c3-d9dF-f8dc9fF2CCED\"\
          \n    \n    ext_id = \"6eBbcFF0-1eb6-6Ed7-7ec8-2dFfDbe451Fb\"\n    # Datetime\
          \ needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = volume_groups_api.get_volume_disk_stats(volumeGroupExtId=volume_group_ext_id,\
          \ extId=ext_id, _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_volumes_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/volumes-go-client/v4/models/volumes/v4/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VolumeGroupsApiInstance\
          \ *api.VolumeGroupsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VolumeGroupsApiInstance = api.NewVolumeGroupsApi(ApiClientInstance)\n\
          \n    \n    volumeGroupExtId := \"a3a9a950-CA7D-dFbE-13d5-fa15dcFDb3B5\"\
          \n    \n    extId := \"DAabC4D0-B7bD-AfB9-Ba79-B5bd5EBEA48c\"\n    // Datetime\
          \ needs to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ VolumeGroupsApiInstance.GetVolumeDiskStats(&volumeGroupExtId, &extId,\
          \ &startTime_, &endTime_, &samplingInterval_, &statType_, nil)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.VolumeDiskStats)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/volumes/v4.0/stats/volume-groups/83eC4Fac-fB1f-4FFc-05fb-FdfbCa608D6a/disks/16A30428-8D01-Ae9b-bdBf-2Fad3efb9cD0?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/volumes/v4.0/stats/volume-groups/eEa30F61-9dAe-5CaA-dF47-cCfa1eDbB3AD/disks/E3eB9Ea9-99Cf-C4bE-BBdd-f5A0EdCDf8D8?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
components:
  schemas:
    volumes.v4.0.config.GetIscsiClientApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: volumes.v4.config.IscsiClient
          oneOf:
          - $ref: '#/components/schemas/volumes.v4.0.config.IscsiClient'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
        \ Get operation"
    volumes.v4.0.config.IscsiClient:
      title: iSCSI client object
      description: A model that represents an iSCSI client that can be associated
        with a Volume Group as an external attachment.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          iscsiInitiatorName:
            maxLength: 64
            type: string
            description: iSCSI initiator name. Exactly one of iscsiInitiatorName and
              iscsiInitiatorNetworkId must be specified during the attach operation.
              This field is immutable.
          iscsiInitiatorNetworkId:
            $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
          clientSecret:
            maxLength: 16
            minLength: 12
            type: string
            description: iSCSI initiator client secret in case of CHAP authentication.
              This field should not be provided if the authentication type is not
              set to CHAP.
            format: password
            writeOnly: true
            example: '***************'
          enabledAuthentications:
            $ref: '#/components/schemas/volumes.v4.0.config.AuthenticationType'
          attachedTargets:
            maxItems: 128
            minItems: 0
            type: array
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.config.TargetParam'
          numVirtualTargets:
            type: integer
            description: Number of virtual targets generated for the iSCSI target.
              This field is immutable.
            format: int32
            writeOnly: true
            example: 3
          clusterReference:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The UUID of the cluster that will host the iSCSI client.
              This field is read-only.
            readOnly: true
            example: e5827a56-63e5-4ced-9078-747a6506d177
          attachmentSite:
            $ref: '#/components/schemas/volumes.v4.0.config.VolumeGroupAttachmentSite'
        additionalProperties: false
    volumes.v4.0.config.UpdateIscsiClientApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
        \ Put operation"
    volumes.v4.0.config.UpdateIscsiClientByIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients/{extId}\
        \ Patch operation"
    volumes.v4.0.config.AuthenticationType:
      title: Supported types of authentication
      type: string
      description: "The authentication type enabled for the Volume Group. This is\
        \ an optional field. If omitted, the authentication is not configured for\
        \ the Volume Group. If this is set to CHAP, the target/client secret must\
        \ be provided."
      enum:
      - CHAP
      - NONE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        CHAP: Access to the Volume Group requires CHAP authentication.
        NONE: Access to the Volume Group doesn't require any authentication.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    volumes.v4.0.config.TargetParam:
      title: Parameters associated with each iSCSI target corresponding to the iSCSI
        client
      type: object
      properties:
        numVirtualTargets:
          maximum: 32
          minimum: 1
          type: integer
          description: Number of virtual targets generated for the iSCSI target. This
            field is immutable.
          format: int32
          readOnly: true
          example: 32
        iscsiTargetName:
          maxLength: 512
          type: string
          description: Name of the iSCSI target that the iSCSI client is connected
            to. This is a read-only field.
          readOnly: true
      additionalProperties: false
      description: List of iSCSI target parameters that will be visible and accessible
        to the iSCSI client.
    volumes.v4.0.config.VolumeGroupAttachmentSite:
      title: Supported Volume Group attachment sites
      type: string
      description: The site where the Volume Group attach operation should be processed.
        This is an optional field. This field may only be set if Metro DR has been
        configured for this Volume Group.
      enum:
      - PRIMARY
      - SECONDARY
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        SECONDARY: Attach to the Volume Group on the stretch secondary site.
        PRIMARY: Attach to the Volume Group on the stretch primary site.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    volumes.v4.0.config.Cluster:
      title: Cluster model object
      type: object
      properties:
        clusterExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Cluster Uuid.
          readOnly: true
          example: 9c0828ba-236e-43bf-86de-eb73cc454c49
        clusterName:
          maxLength: 75
          type: string
          description: Name of the Cluster.
          readOnly: true
      additionalProperties: false
    volumes.v4.0.config.ListIscsiClientsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/volumes.v4.0.config.IscsiClient'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /volumes/v4.0/config/iscsi-clients
        Get operation
    volumes.v4.0.config.NvmfClient:
      title: NVMf client object
      description: A model that represents a NVMf client that can be associated with
        a Volume Group as an external attachment.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          nvmfInitiatorName:
            maxLength: 68
            type: string
            description: NVMf client qualified name.
          attachedTargets:
            maxItems: 20
            minItems: 0
            type: array
            description: List of all subsystems connected to a NVMf client.
            readOnly: true
            items:
              type: string
          clusterReference:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The UUID of the cluster that will host the NVMf client.
            readOnly: true
            example: 92b81b6f-ff64-4745-846b-4678b9db4b77
        additionalProperties: false
    volumes.v4.0.config.GetVolumeGroupApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: volumes.v4.config.VolumeGroup
          oneOf:
          - $ref: '#/components/schemas/volumes.v4.0.config.VolumeGroup'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
        \ Get operation"
    volumes.v4.0.config.VolumeGroup:
      title: Volume Group object
      description: A model that represents a Volume Group resource.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 256
            type: string
            description: Volume Group name.
          description:
            maxLength: 1000
            type: string
            description: Volume Group description. This is an optional field.
          shouldLoadBalanceVmAttachments:
            type: boolean
            description: "Indicates whether to enable Volume Group load balancing\
              \ for VM attachments. This cannot be enabled if there are iSCSI client\
              \ attachments already associated with the Volume Group, and vice-versa.\
              \ This is an optional field."
            default: false
          sharingStatus:
            $ref: '#/components/schemas/volumes.v4.0.config.SharingStatus'
          targetPrefix:
            maxLength: 512
            pattern: "^[\\da-zA-Z:\\.\\-]+$"
            type: string
            description: The specifications contain the target prefix for external
              clients as the value. This is an optional field.
            writeOnly: true
          targetName:
            maxLength: 512
            minLength: 12
            type: string
            description: Name of the external client target that will be visible and
              accessible to the client. This is an optional field.
          enabledAuthentications:
            $ref: '#/components/schemas/volumes.v4.0.config.AuthenticationType'
          iscsiFeatures:
            $ref: '#/components/schemas/volumes.v4.0.config.IscsiFeatures'
          createdBy:
            maxLength: 512
            type: string
            description: Service/user who created this Volume Group. This is an optional
              field.
          clusterReference:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The UUID of the cluster that will host the Volume Group.
              This is a mandatory field for creating a Volume Group on Prism Central.
            example: 0caed483-a63d-4c31-a5ca-70161af400af
          storageFeatures:
            $ref: '#/components/schemas/volumes.v4.0.config.StorageFeatures'
          usageType:
            $ref: '#/components/schemas/volumes.v4.0.config.UsageType'
          attachmentType:
            $ref: '#/components/schemas/volumes.v4.0.config.AttachmentType'
          protocol:
            $ref: '#/components/schemas/volumes.v4.0.config.Protocol'
          isHidden:
            type: boolean
            description: "Indicates whether the Volume Group is meant to be hidden\
              \ or not. This is an optional field. If omitted, the VG will not be\
              \ hidden."
            default: false
          disks:
            maxItems: 10
            minItems: 1
            type: array
            description: A list of Volume Disks to be attached to the Volume Group.
            writeOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.config.VolumeDisk'
        additionalProperties: false
        x-required-by-operation:
          create:
          - clusterReference
          - name
    volumes.v4.0.config.UpdateVolumeGroupApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
        \ Put operation"
    volumes.v4.0.config.DeleteVolumeGroupApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
        \ Delete operation"
    volumes.v4.0.config.UpdateVolumeGroupByIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}\
        \ Patch operation"
    volumes.v4.0.config.SharingStatus:
      title: The supported sharing status types
      type: string
      description: "Indicates whether the Volume Group can be shared across multiple\
        \ iSCSI initiators. The mode cannot be changed from SHARED to NOT_SHARED on\
        \ a Volume Group with multiple attachments. Similarly, a Volume Group cannot\
        \ be associated with more than one attachment as long as it is in exclusive\
        \ mode. This is an optional field."
      enum:
      - SHARED
      - NOT_SHARED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        SHARED: The Volume Group is shared between multiple iSCSI-clients or VMs.
        NOT_SHARED: The Volume Group is exclusively accessed by an iSCSI client or
          VM.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    volumes.v4.0.config.IscsiFeatures:
      title: Iscsi target features title
      type: object
      properties:
        targetSecret:
          maxLength: 16
          minLength: 12
          type: string
          description: Target secret in case of a CHAP authentication. This field
            must only be provided in case the authentication type is not set to CHAP.
            This is an optional field and it cannot be retrieved once configured.
          format: password
          writeOnly: true
          example: '*************'
        enabledAuthentications:
          $ref: '#/components/schemas/volumes.v4.0.config.AuthenticationType'
      additionalProperties: false
      description: iSCSI specific settings for the Volume Group. This is an optional
        field.
    volumes.v4.0.config.StorageFeatures:
      type: object
      properties:
        flashMode:
          $ref: '#/components/schemas/volumes.v4.0.config.FlashMode'
      additionalProperties: false
      description: Storage optimization features which must be enabled on the Volume
        Group. This is an optional field.
    volumes.v4.0.config.UsageType:
      title: Supported Volume Group Usage types
      type: string
      description: Expected usage type for the Volume Group. This is an indicative
        hint on how the caller will consume the Volume Group. This is an optional
        field.
      enum:
      - USER
      - INTERNAL
      - TEMPORARY
      - BACKUP_TARGET
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        BACKUP_TARGET: The Volume Groups which store backup data.
        INTERNAL: "The Volume Groups, which are critical to AOS and its related applications\
          \ must not be modified externally."
        TEMPORARY: The temporary Volume Groups which are created to access the data
          from the disks and may be deleted without any data loss.
        USER: "The Volume Groups created by the user, typically using the UI."
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    volumes.v4.0.config.AttachmentType:
      title: Supported Volume Group attachment types
      type: string
      description: The field indicates whether a VG has a VM or an external attachment
        associated with it.
      enum:
      - NONE
      - DIRECT
      - EXTERNAL
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        EXTERNAL: Volume Group has an external iSCSI or NVMf attachment.
        NONE: Volume Group has no attachment.
        $UNKNOWN: |
          Unknown value.
        DIRECT: Volume Group has a VM attachment.
        $REDACTED: |
          Redacted value.
    volumes.v4.0.config.Protocol:
      title: Supported Volume group protocols
      type: string
      description: Type of protocol to be used for Volume Group.
      enum:
      - NOT_ASSIGNED
      - ISCSI
      - NVMF
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        NOT_ASSIGNED: Volume Group does not use any protocol.
        ISCSI: Volume Group uses iSCSI protocol.
        NVMF: Volume Group uses NVMf protocol.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    volumes.v4.0.config.VolumeDisk:
      title: Volume Disk object
      description: "A model that represents a Volume Disk associated with a Volume\
        \ Group, supported by a backing file on DSF."
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          index:
            maximum: 16383
            minimum: 0
            type: integer
            description: Index of the disk in a Volume Group. This field is optional
              and immutable.
            example: 74
          diskSizeBytes:
            maximum: 219902325555200
            minimum: 524288
            type: integer
            description: Size of the disk in bytes. This field is mandatory during
              Volume Group creation if a new disk is created on the storage container.
            format: int64
            example: 156650882979022
          storageContainerId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Storage container on which the disk must be created. This
              is a read-only field.
            readOnly: true
            example: 85858c65-8cb8-4aa3-a466-493d95850f9d
          description:
            maxLength: 1000
            type: string
            description: Volume Disk description. This is an optional field.
          diskDataSourceReference:
            $ref: '#/components/schemas/common.v1.0.config.EntityReference'
          diskStorageFeatures:
            $ref: '#/components/schemas/volumes.v4.0.config.DiskStorageFeatures'
        additionalProperties: false
        x-required-by-operation:
          create:
          - diskDataSourceReference
    volumes.v4.0.config.VolumeGroupMetadata:
      title: Volume Group metadata model object
      type: object
      properties:
        ownerReference:
          type: string
          description: Owner reference information of a Volume Group. This is read-only
            and is automatically populated using the authentication context provided
            during the VG creation.
          readOnly: true
        categoryIds:
          maxItems: 20
          minItems: 0
          type: array
          description: The list of categories attached to a Volume Group. This is
            read-only. Use the associate/disassociate-category APIs to update this
            list.
          readOnly: true
          items:
            type: string
      additionalProperties: false
    volumes.v4.0.config.FlashMode:
      type: object
      properties:
        isEnabled:
          type: boolean
          description: This field will indicate whether flash mode is enabled or not.
          default: false
      additionalProperties: false
      description: "Once configured, this field will avoid down migration of data\
        \ from the hot tier unless the overrides field is specified for the virtual\
        \ disks."
    volumes.v4.0.config.DiskStorageFeatures:
      type: object
      properties:
        flashMode:
          $ref: '#/components/schemas/volumes.v4.0.config.FlashMode'
      additionalProperties: false
      description: "Storage optimization features which must be enabled on the Volume\
        \ Disks. This is an optional field. If omitted, the disks will honor the Volume\
        \ Group specific storage features setting."
    volumes.v4.0.config.ListVolumeGroupsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/volumes.v4.0.config.VolumeGroup'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /volumes/v4.0/config/volume-groups
        Get operation
    volumes.v4.0.config.CreateVolumeGroupApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /volumes/v4.0/config/volume-groups
        Post operation
    volumes.v4.0.config.ListVolumeDisksApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/volumes.v4.0.config.VolumeDisk'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks\
        \ Get operation"
    volumes.v4.0.config.CreateVolumeDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks\
        \ Post operation"
    volumes.v4.0.config.GetVolumeDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: volumes.v4.config.VolumeDisk
          oneOf:
          - $ref: '#/components/schemas/volumes.v4.0.config.VolumeDisk'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
        \ Get operation"
    volumes.v4.0.config.UpdateVolumeDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
        \ Put operation"
    volumes.v4.0.config.DeleteVolumeDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
        \ Delete operation"
    volumes.v4.0.config.UpdateVolumeDiskByIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/disks/{extId}\
        \ Patch operation"
    volumes.v4.0.config.ListExternalIscsiAttachmentsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/volumes.v4.0.config.IscsiClientAttachment'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/external-iscsi-attachments\
        \ Get operation"
    volumes.v4.0.config.IscsiClientAttachment:
      title: iSCSI client attachment object
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external identifier of an iSCSI client.
          example: 5a41f3b5-7c6b-4db0-b076-b2c86ef37ed5
        clusterReference:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The UUID of the cluster that will host the iSCSI client. This
            field is read-only.
          readOnly: true
          example: ef44abb1-dbdc-479a-a4bf-35d64db0984e
      additionalProperties: false
      description: A model that represents an iSCSI client that can be associated
        with a Volume Group as an external attachment. It contains the minimal properties
        required for the attachment.
    volumes.v4.0.config.AttachIscsiClientApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-iscsi-client\
        \ Post operation"
    volumes.v4.0.config.DetachIscsiClientApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-iscsi-client\
        \ Post operation"
    volumes.v4.0.config.ListVmAttachmentsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/volumes.v4.0.config.VmAttachment'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/vm-attachments\
        \ Get operation"
    volumes.v4.0.config.VmAttachment:
      required:
      - extId
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external identifier of the VM.
          example: 1eafb1ad-21a1-4c3d-81da-1a99d3c05c72
        index:
          type: integer
          description: The index on the SCSI bus to attach the VM to the Volume Group.
            This is an optional field.
          writeOnly: true
          example: 26
      additionalProperties: false
      description: A model that represents a VM reference that can be associated with
        a Volume Group as an AHV hypervisor attachment.
    volumes.v4.0.config.AttachVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-vm\
        \ Post operation"
    volumes.v4.0.config.DetachVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-vm\
        \ Post operation"
    volumes.v4.0.config.ListCategoryAssociationsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/volumes.v4.0.config.CategoryDetails'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/category-associations\
        \ Get operation"
    volumes.v4.0.config.CategoryDetails:
      description: An existing category detail associated with the Volume Group.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.config.EntityReference'
    volumes.v4.0.config.CategoryEntityReferences:
      type: object
      properties:
        categories:
          maxItems: 20
          minItems: 1
          type: array
          description: The category to be associated/disassociated with the Volume
            Group. This is a mandatory field.
          items:
            $ref: '#/components/schemas/common.v1.0.config.EntityReference'
      additionalProperties: false
      description: The list of categories to be associated/disassociated with the
        Volume Group. This is a mandatory field.
    volumes.v4.0.config.AssociateCategoryApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/associate-category\
        \ Post operation"
    volumes.v4.0.config.DisassociateCategoryApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/disassociate-category\
        \ Post operation"
    volumes.v4.0.config.MigrateVolumeGroupApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/migrate\
        \ Post operation"
    volumes.v4.0.config.RevertSpec:
      title: Volume Group revert specification
      required:
      - volumeGroupRecoveryPointExtId
      type: object
      properties:
        volumeGroupRecoveryPointExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external identifier of the Volume Group recovery point.
            This is a mandatory field.
          example: f0a47be2-aef7-4c0f-97f4-25b5e512a360
      additionalProperties: false
      description: Specify the Volume Group recovery point ID to which the Volume
        Group would be reverted.
    volumes.v4.0.config.RevertVolumeGroupApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/revert\
        \ Post operation"
    volumes.v4.0.config.PauseVolumeGroupSynchronousReplicationApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/pause-synchronous-replication\
        \ Post operation"
    volumes.v4.0.config.ResumeVolumeGroupSynchronousReplicationApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: volumes.v4.error.ErrorResponse
          oneOf:
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/resume-synchronous-replication\
        \ Post operation"
    volumes.v4.0.config.GetVolumeGroupMetadataApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: common.v1.config.Metadata
          oneOf:
          - $ref: '#/components/schemas/common.v1.0.config.Metadata'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{volumeGroupExtId}/metadata\
        \ Get operation"
    volumes.v4.0.config.UpdateVolumeGroupMetadataInfoApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: volumes.v4.error.ErrorResponse
          oneOf:
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/update-metadata-info\
        \ Post operation"
    common.v1.0.config.Metadata:
      type: object
      properties:
        ownerReferenceId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            A globally unique identifier that represents the owner of this resource.
          example: c6353577-8b07-442e-868a-5be8776ab54a
        ownerUserName:
          maxLength: 128
          type: string
          description: |
            The userName of the owner of this resource.
        projectReferenceId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            A globally unique identifier that represents the project this resource belongs to.
          example: d8b7ff9e-803a-4d74-a409-32f50e12961b
        projectName:
          maxLength: 128
          type: string
          description: |
            The name of the project this resource belongs to.
        categoryIds:
          maxItems: 256
          minItems: 1
          type: array
          description: |
            A list of globally unique identifiers that represent all the categories the resource is associated with.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: fd753383-c9c1-4c07-889f-b4ea7b45d368
      additionalProperties: false
      description: |
        Metadata associated with this resource.
    common.v1.0.response.ApiResponseMetadata:
      type: object
      properties:
        flags:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of flags that may indicate the status of the response. For example, a flag with the name 'isPaginated' and value 'false', indicates that the response is not paginated.
          items:
            $ref: '#/components/schemas/common.v1.0.config.Flag'
        links:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of HATEOAS style links for the response that may also include pagination links for list operations.
          items:
            $ref: '#/components/schemas/common.v1.0.response.ApiLink'
        totalAvailableResults:
          type: integer
          description: |
            The total number of entities that are available on the server for this type.
          format: int32
          example: 17
        messages:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            Information, Warning or Error messages that might provide additional contextual information related to the operation.
          items:
            $ref: '#/components/schemas/common.v1.0.config.Message'
        extraInfo:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of entity-specific metadata
          items:
            $ref: '#/components/schemas/common.v1.0.config.KVPair'
      additionalProperties: false
      description: |
        The metadata associated with an API response. This value is always present and minimally contains the self-link for the API request that produced this response. It also contains pagination data for the paginated requests.
    common.v1.0.config.Flag:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 3
          type: string
          description: |
            Name of the flag.
        value:
          type: boolean
          description: |
            Value of the flag.
          default: false
      additionalProperties: false
      description: |
        Many entities in the Nutanix APIs carry flags.  This object captures all the flags associated with that entity through this object.  The field that hosts this type of object must have an attribute called x-bounded-map-keys that tells which flags are actually present for that entity.
    common.v1.0.response.ApiLink:
      type: object
      properties:
        href:
          type: string
          description: |
            The URL at which the entity described by the link can be accessed.
        rel:
          type: string
          description: |
            A name that identifies the relationship of the link to the object that is returned by the URL.  The unique value of "self" identifies the URL for the object.
      additionalProperties: false
      description: |
        A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
    common.v1.0.config.Message:
      type: object
      properties:
        code:
          type: string
          description: |
            A code that uniquely identifies a message.
        message:
          type: string
          description: |
            The description of the message.
        locale:
          type: string
          description: |
            The locale for the message description.
          default: en_US
        severity:
          $ref: '#/components/schemas/common.v1.0.config.MessageSeverity'
      additionalProperties: false
    common.v1.0.config.KVPair:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 3
          type: string
          description: |
            The key of the key-value pair.
        value:
          description: The value associated with the key for this key-value pair
          oneOf:
          - type: string
            description: |
              A string value in a key-value pair.
          - type: integer
            description: |
              An integer value in a key-value pair.
            example: 92
          - type: boolean
            description: |
              An boolean value in a key-value pair.
            example: true
          - maxItems: 100
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents a list of strings.
            items:
              type: string
          - type: object
            additionalProperties:
              type: string
            description: |
              A value in a key-value pair that represents a map of string keys and values.
          - maxItems: 20
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents an array of maps of string keys and values.
            items:
              $ref: '#/components/schemas/common.v1.0.config.MapOfStringWrapper'
          - maxItems: 100
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents a list of integers.
            items:
              type: integer
              example: 52
      additionalProperties: false
      description: |
        A map describing a set of keys and their corresponding values.
    common.v1.0.config.MessageSeverity:
      type: string
      description: |
        The message severity.
      enum:
      - INFO
      - WARNING
      - ERROR
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        ERROR: |
          Error indicating failed completion.
        INFO: |
          Information about successful completion.
        $UNKNOWN: |
          Unknown value.
        WARNING: |
          Warning indicating future error.
        $REDACTED: |
          Redacted value.
    common.v1.0.config.MapOfStringWrapper:
      type: object
      properties:
        map:
          type: object
          additionalProperties:
            type: string
          description: |
            A map with string keys and values.
      additionalProperties: false
      description: |
        A wrapper schema containing a map with string keys and values.
    volumes.v4.0.config.UpdateVolumeGroupMetadataApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: volumes.v4.error.ErrorResponse
          oneOf:
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/update-metadata\
        \ Post operation"
    volumes.v4.0.config.NvmfClientAttachment:
      title: NVMf client attachment object
      description: A model that represents an NVMf client that can be associated with
        a Volume Group as an external attachment. It contains the minimal properties
        required for the attachment.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          clusterReference:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The UUID of the cluster that will host the NVMf client.
            readOnly: true
            example: 243464e7-6e86-4f30-a1a2-8429d51f32b1
        additionalProperties: false
    volumes.v4.0.config.AttachNvmfClientApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/attach-nvmf-client\
        \ Post operation"
    volumes.v4.0.config.DetachNvmfClientApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/config/volume-groups/{extId}/$actions/detach-nvmf-client\
        \ Post operation"
    volumes.v4.0.stats.GetVolumeGroupStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: volumes.v4.stats.VolumeGroupStats
          oneOf:
          - $ref: '#/components/schemas/volumes.v4.0.stats.VolumeGroupStats'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/stats/volume-groups/{extId}\
        \ Get operation"
    volumes.v4.0.stats.VolumeGroupStats:
      title: Volume group stats model
      description: A model that stores the Volume group stats.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          volumeGroupExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Uuid of the Volume Group.
            example: 667760dd-4cbf-41a7-846b-04514441b77c
            deprecated: true
          controllerUserBytes:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller user bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerNumIOPS:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller I/O rate measured in iops.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerNumReadIOPS:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller read I/O measured in iops.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerNumWriteIOPS:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller write I/O measured in iops.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerIOBandwidthKBps:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller I/O bandwidth measured in Kbps.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerReadIOBandwidthKBps:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller read I/O bandwidth measured in Kbps.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerWriteIOBandwidthKBps:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller write I/O bandwidth measured in Kbps.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerAvgIOLatencyUsecs:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller average I/O latency measured in microseconds.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerAvgReadIOLatencyUsecs:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller average read I/O latency measured in microseconds.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerAvgWriteIOLatencyUsecs:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller average write I/O latency measured in microseconds.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
        additionalProperties: false
    volumes.v4.0.stats.TimeValuePair:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp is returned in Epoch format.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        value:
          type: integer
          description: Value of the stat at the corresponding timestamp value represented
            in Int64 format.
          format: int64
          example: 49
      additionalProperties: false
    common.v1.0.stats.DownSamplingOperator:
      type: string
      description: |
        The operator to use while performing down-sampling on stats data. Allowed values are SUM, MIN, MAX, AVG, COUNT and LAST.
      enum:
      - SUM
      - MIN
      - MAX
      - AVG
      - COUNT
      - LAST
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        AVG: |
          Aggregation indicating mean or average of all values.
        MIN: |
          Aggregation containing lowest of all values.
        MAX: |
          Aggregation containing highest of all values.
        LAST: |
          Aggregation containing only the last recorded value.
        SUM: |
          Aggregation with sum of all values.
        COUNT: |
          Aggregation containing total count of values.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    common.v1.0.response.ExternalizableAbstractModel:
      description: |
        A model that represents an object instance that is accessible through an API endpoint.  Instances of this type get an extId field that contains the globally unique identifier for that instance.  Externally accessible instances are always tenant aware and, therefore, extend the TenantAwareModel
      allOf:
      - $ref: '#/components/schemas/common.v1.0.config.TenantAwareModel'
      - type: object
        properties:
          extId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: |
              A globally unique identifier of an instance that is suitable for external consumption.
            nullable: true
            readOnly: true
            example: d4e34a80-abc5-46ca-8fcd-af3f00f2930a
          links:
            maxItems: 20
            minItems: 0
            type: array
            description: |
              A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.response.ApiLink'
        additionalProperties: false
    common.v1.0.config.TenantAwareModel:
      type: object
      properties:
        tenantId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
          readOnly: true
          example: d92bfbe7-1b58-4493-ba79-3cf2a204bdca
      additionalProperties: false
      description: |
        A model base class whose instances are bound to a specific tenant.  This model adds a tenantId to the base model class that it extends and is automatically set by the server.
    volumes.v4.0.stats.GetVolumeDiskStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: volumes.v4.stats.VolumeDiskStats
          oneOf:
          - $ref: '#/components/schemas/volumes.v4.0.stats.VolumeDiskStats'
          - $ref: '#/components/schemas/volumes.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /volumes/v4.0/stats/volume-groups/{volumeGroupExtId}/disks/{extId}\
        \ Get operation"
    volumes.v4.0.stats.VolumeDiskStats:
      title: Volume disk stats model
      description: A model that stores the Volume disk stats.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          volumeDiskExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Uuid of the Volume Disk.
            example: 65fc7d80-f563-4929-97d6-860ba58edf37
            deprecated: true
          controllerUserBytes:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller user bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerNumIOPS:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller I/O rate measured in iops.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerNumReadIOPS:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller read I/O measured in iops.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerNumWriteIOPS:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller write I/O measured in iops.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerIOBandwidthKBps:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller I/O bandwidth measured in Kbps.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerReadIOBandwidthKBps:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller read I/O bandwidth measured in Kbps.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerWriteIOBandwidthKBps:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller write I/O bandwidth measured in Kbps.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerAvgIOLatencyUsecs:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller average I/O latency measured in microseconds.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerAvgReadIOLatencyUsecs:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller average read I/O latency measured in microseconds.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
          controllerAvgWriteIOLatencyUsecs:
            maxItems: 100
            minItems: 0
            type: array
            description: Controller average write I/O latency measured in microseconds.
            readOnly: true
            items:
              $ref: '#/components/schemas/volumes.v4.0.stats.TimeValuePair'
        additionalProperties: false
    common.v1.0.config.EntityReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            A globally unique identifier of an instance that is suitable for external consumption.
          example: 1632c00d-c762-4aa5-b370-440584b6952b
        name:
          maxLength: 256
          type: string
          description: |
            Name of entity that's represented by this reference.
        uris:
          maxItems: 100
          minItems: 0
          type: array
          description: URI of entities that's represented by this reference.
          items:
            type: string
        entityType:
          $ref: '#/components/schemas/common.v1.0.config.EntityType'
      additionalProperties: false
    common.v1.0.config.EntityType:
      type: string
      description: |
        Type of entity that's represented by this reference. eg: VPC
      enum:
      - CLUSTER
      - VM
      - STORAGE_CONTAINER
      - VOLUME_GROUP
      - TASK
      - IMAGE
      - CATEGORY
      - NODE
      - VPC
      - SUBNET
      - ROUTING_POLICY
      - FLOATING_IP
      - VPN_GATEWAY
      - VPN_CONNECTION
      - DIRECT_CONNECT
      - DIRECT_CONNECT_VIF
      - VIRTUAL_NIC
      - VIRTUAL_SWITCH
      - VM_DISK
      - VOLUME_DISK
      - DISK_RECOVERY_POINT
      - VTEP_GATEWAY
      - RECOVERY_PLAN
      - RECOVERY_PLAN_JOB
      - AVAILABILITY_ZONE
      - VIRTUAL_NETWORK
      - CONSISTENCY_GROUP
      - SUBNET_EXTENSION
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        VOLUME_GROUP: |
          Entity representing a volume group.
        ROUTING_POLICY: |
          Entity representing a Routing Policy.
        DIRECT_CONNECT_VIF: |
          Entity representing a Direct Connect Virtual Interface.
        AVAILABILITY_ZONE: |
          Entity representing an Availability Zone.
        STORAGE_CONTAINER: |
          Entity representing a storage container.
        VPC: |
          Entity representing a Virtual Private Cloud.
        VPN_CONNECTION: |
          Entity representing a VPN Connection.
        VOLUME_DISK: |
          Entity representing a Volume Disk.
        VPN_GATEWAY: |
          Entity representing a VPN Gateway.
        IMAGE: |
          Entity representing an image that can be used for creating VM disks etc.
        CATEGORY: |
          Entity representing a category in the form of a Key Value pair.
        RECOVERY_PLAN: |
          Entity representing a Disaster Recovery Plan.
        CLUSTER: |
          Entity representing a Nutanix managed cluster.
        DISK_RECOVERY_POINT: |
          Entity representing the recovery point of a protected Disk.
        CONSISTENCY_GROUP: |
          Entity representing a Consistency Group.
        VIRTUAL_NIC: |
          Entity representing a Virtual Network Interface Card.
        TASK: |
          Entity representing a task.
        VIRTUAL_SWITCH: |
          Entity representing a Virtual Switch.
        VIRTUAL_NETWORK: |
          Entity representing a Virtual Network.
        NODE: |
          Entity representing a node in a Nutanix managed cluster.
        FLOATING_IP: |
          Entity representing a Floating IP.
        $REDACTED: |
          Redacted value.
        SUBNET: |
          Entity representing a Subnet.
        VM_DISK: |
          Entity representing a VM Disk.
        VTEP_GATEWAY: |
          Entity representing a Virtual Tunnel End Point.
        VM: |
          Entity representing an AHV or ESX Virtual Machine.
        DIRECT_CONNECT: |
          Entity representing a Direct Connect.
        SUBNET_EXTENSION: |
          Entity representing a Subnet Extension.
        $UNKNOWN: |
          Unknown value.
    common.v1.0.config.IPAddressOrFQDN:
      type: object
      properties:
        ipv4:
          $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
        ipv6:
          $ref: '#/components/schemas/common.v1.0.config.IPv6Address'
        fqdn:
          $ref: '#/components/schemas/common.v1.0.config.FQDN'
      additionalProperties: false
      description: |
        An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
    common.v1.0.config.IPv4Address:
      required:
      - value
      type: object
      properties:
        value:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
          description: |
            The IPv4 address of the host.
          example: 254.180.178.15
        prefixLength:
          maximum: 32
          minimum: 0
          type: integer
          description: |
            The prefix length of the network to which this host IPv4 address belongs.
          format: int32
          default: 32
      additionalProperties: false
      description: |
        An unique address that identifies a device on the internet or a local network in IPv4 format.
    common.v1.0.config.IPv6Address:
      required:
      - value
      type: object
      properties:
        value:
          pattern: "^(?:(?:(?:[A-Fa-f0-9]{1,4}:){6}|(?=(?:[A-Fa-f0-9]{0,4}:){0,6}(?:[0-9]{1,3}\\\
            .){3}[0-9]{1,3}$)(([0-9a-fA-F]{1,4}:){0,5}|:)((:[0-9a-fA-F]{1,4}){1,5}:|:)|::(?:[A-Fa-f0-9]{1,4}:){5})(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\\
            .){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])|(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}|(?=(?:[A-Fa-f0-9]{0,4}:){0,7}[A-Fa-f0-9]{0,4}$)(([0-9a-fA-F]{1,4}:){1,7}|:)((:[0-9a-fA-F]{1,4}){1,7}|:)|(?:[A-Fa-f0-9]{1,4}:){7}:|:(:[A-Fa-f0-9]{1,4}){7})$"
          type: string
          description: |
            The IPv6 address of the host.
          example: 7d9a:64df:8ddf:d839:c6c4:eae3:5c0b:a4ea
        prefixLength:
          maximum: 128
          minimum: 0
          type: integer
          description: |
            The prefix length of the network to which this host IPv6 address belongs.
          format: int32
          default: 128
      additionalProperties: false
      description: |
        An unique address that identifies a device on the internet or a local network in IPv6 format.
    common.v1.0.config.FQDN:
      type: object
      properties:
        value:
          pattern: "^([a-z0-9]+(-[a-z0-9]+)*\\.)+([a-z0-9]+(-[a-z0-9]+)*){1,63}$"
          type: string
          description: |
            The fully qualified domain name of the host.
          example: www.example-corp.com
      additionalProperties: false
      description: |
        A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
    volumes.v4.0.error.ErrorResponse:
      type: object
      properties:
        error:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/volumes.v4.0.error.AppMessage'
          - $ref: '#/components/schemas/volumes.v4.0.error.SchemaValidationError'
      additionalProperties: false
      description: An error response indicates that the operation has failed either
        due to a client error(4XX) or server error(5XX). Please look at the HTTP status
        code and namespace specific error code and error message for further details.
      x-platform-generated: true
    volumes.v4.0.error.AppMessage:
      type: object
      properties:
        message:
          type: string
          description: The message string.
        severity:
          $ref: '#/components/schemas/common.v1.0.config.MessageSeverity'
        code:
          type: string
          description: "The code associated with this message.This string is typically\
            \ prefixed by the namespace the endpoint belongs to. For example: VMM-40000"
        locale:
          type: string
          description: Locale for this message. The default locale would be 'en-US'.
          default: en_US
        errorGroup:
          type: string
          description: The error group associated with this message of severity ERROR.
        argumentsMap:
          type: object
          additionalProperties:
            type: string
          description: The map of argument name to value.
      additionalProperties: false
      description: Message with associated severity describing status of the current
        operation.
      x-platform-generated: true
    volumes.v4.0.error.MessageSeverity:
      type: string
      description: Enum schema MessageSeverity
      enum:
      - INFO
      - WARNING
      - ERROR
      - $UNKNOWN
      - $REDACTED
      x-platform-generated: true
      x-codegen-hint:
        $any:
        - type: entity-identifier
          properties:
            identifiers:
            - value: $UNKNOWN
              index: 201
            - value: $REDACTED
              index: 202
            - value: INFO
              index: 203
            - value: WARNING
              index: 204
            - value: ERROR
              index: 205
    volumes.v4.0.error.SchemaValidationError:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp of the response.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        statusCode:
          type: integer
          description: The HTTP status code of the response.
          example: 73
        error:
          type: string
          description: The generic error message for the response.
        path:
          type: string
          description: API path on which the request was made.
        validationErrorMessages:
          type: array
          description: List of validation error messages
          items:
            $ref: '#/components/schemas/volumes.v4.0.error.SchemaValidationErrorMessage'
      additionalProperties: false
      description: This schema is generated from SchemaValidationError.java
      x-platform-generated: true
    volumes.v4.0.error.SchemaValidationErrorMessage:
      type: object
      properties:
        location:
          type: string
          description: "The part of the request that failed validation. Validation\
            \ can fail for path, query parameters, and request body."
        message:
          type: string
          description: The detailed message for the validation error.
        attributePath:
          type: string
          description: The path of the attribute that failed validation in the schema.
      additionalProperties: false
      description: This schema is generated from SchemaValidationErrorMessage.java
      x-platform-generated: true
    prism.v4.0.config.TaskReference:
      type: object
      properties:
        extId:
          pattern: "^[a-zA-Z0-9/+]*={0,2}:[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
          description: A globally unique identifier of a task.
          example: QmFzZTY0RW5jb2RlZA==:2eb25ec6-5070-4b62-a03e-4717e1ffec5a
      additionalProperties: false
      description: A reference to a task tracking an asynchronous operation. The status
        of the task can be queried by making a GET request to the task URI provided
        in the metadata section of the API response.
  securitySchemes:
    basicAuthScheme:
      type: http
      scheme: basic
    apiKeyAuthScheme:
      type: apiKey
      name: X-ntnx-api-key
      in: header
